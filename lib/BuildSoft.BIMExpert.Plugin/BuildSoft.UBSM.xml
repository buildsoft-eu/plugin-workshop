<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BuildSoft.UBSM</name>
    </assembly>
    <members>
        <member name="T:BuildSoft.UBSM.Analysis.Function">
            <summary>Describes a function in a cartesian coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Function.ID">
            <summary>Function ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Function.InterpolationMethod">
            <summary>Describes how to interpolate among values</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Function.QuantityX">
            <summary>Quantity type along the X-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Function.QuantityY">
            <summary>Quantity type along the Y-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Function.Points">
            <summary>Two dimensional sequence of points</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Function" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.Equals(BuildSoft.UBSM.Analysis.Function)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.HasEqualContent(BuildSoft.UBSM.Analysis.Function)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Function.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.Function)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.PropertyFunction">
            <summary>Property defined by a function</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.PropertyFunction.MatKeys">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.PropertyFunction"/> for materials
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyFunction.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyFunction.InterpolationMethod">
            <summary>Describes how to interpolate among values</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyFunction.Key">
            <summary>Key to describe the function</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyFunction.Points">
            <summary>Two dimensional polyline that describes the function</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.PropertyFunction" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.Equals(BuildSoft.UBSM.Analysis.PropertyFunction)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.HasEqualContent(BuildSoft.UBSM.Analysis.PropertyFunction)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFunction.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.PropertyFunction)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.MaterialProperties">
            <summary>Set of properties for a material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialProperties.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialProperties.MaterialID">
            <summary>The material ID for which these properties apply</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialProperties.IsFireCoating">
            <summary>Indicates whether the material can be used as a fire coating</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialProperties.IsStructural">
            <summary>Indicates whether the material can be used in structural components</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialProperties.PropertyGroups">
            <summary>List of material properties divided by Standard</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.MaterialProperties" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.Equals(BuildSoft.UBSM.Analysis.MaterialProperties)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.HasEqualContent(BuildSoft.UBSM.Analysis.MaterialProperties)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialProperties.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.MaterialProperties)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.MaterialPropertyGroup">
            <summary>List of material properties according to a Standard</summary>
            <remarks> Check <see cref="T:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.KeyVal" /> for some predefined properties </remarks>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.MaterialPropertyGroup"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.Standard">
            <summary>Standard associated with these properties</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.UserDefined">
            <summary>Determines wheter the material properties are user-defined</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.Values">
            <summary>List of material properties (scalar) associated with this standard</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.Flags">
            <summary>List of material properties (boolean) associated with this standard</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.Texts">
            <summary>List of material properties (text) associated with this standard</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.Functions">
            <summary>List of material properties (function) associated with this standard</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.MaterialPropertyGroup" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.Equals(BuildSoft.UBSM.Analysis.MaterialPropertyGroup)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.HasEqualContent(BuildSoft.UBSM.Analysis.MaterialPropertyGroup)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.MaterialPropertyGroup.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.MaterialPropertyGroup)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.SectionPropertyGroup">
            <summary>List of section properties according to a Standard</summary>
            <remarks> Check <see cref="T:BuildSoft.UBSM.Analysis.SectionPropertyGroup.KeyVal" /> for some predefined properties </remarks>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.SectionPropertyGroup.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.SectionPropertyGroup"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Standard">
            <summary>Standard used to calculate the section properties</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.MaterialOverrides">
            <summary> Should be provided when the properties in this property group account for a different configuration of materials. If no SectionPropertyGroup with matching material overrides is found, the default SectionPropertyGroup is used. For each material-dependent section properties group, a materialoverride is required. </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Description">
            <summary>Description of the properties</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.UserDefined">
            <summary>Determines wheter the section properties are user-defined</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Values">
            <summary>List of section properties (scalar) associated with this standard</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Flags">
            <summary>List of section properties (boolean) associated with this standard</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Texts">
            <summary>List of section properties (text) associated with this standard</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Functions">
            <summary>List of section properties (function) associated with this standard</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.SectionPropertyGroup" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Equals(BuildSoft.UBSM.Analysis.SectionPropertyGroup)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.HasEqualContent(BuildSoft.UBSM.Analysis.SectionPropertyGroup)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionPropertyGroup.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.SectionPropertyGroup)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.PropertyValue">
            <summary>Property defined by a key-value pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyValue.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyValue.Key">
            <summary>Key to describe the pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyValue.Value">
            <summary>Value of the pair</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.PropertyValue" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.Equals(BuildSoft.UBSM.Analysis.PropertyValue)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.HasEqualContent(BuildSoft.UBSM.Analysis.PropertyValue)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyValue.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.PropertyValue)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.PropertyText">
            <summary>Property defined by a key-value pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyText.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyText.Key">
            <summary>Key to describe the pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyText.Value">
            <summary>Value of the pair</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.PropertyText" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.Equals(BuildSoft.UBSM.Analysis.PropertyText)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.HasEqualContent(BuildSoft.UBSM.Analysis.PropertyText)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyText.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.PropertyText)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.PropertyFlag">
            <summary>Property defined by a key-value pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyFlag.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyFlag.Key">
            <summary>Key to describe the pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.PropertyFlag.Value">
            <summary>Value of the pair</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.PropertyFlag" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.Equals(BuildSoft.UBSM.Analysis.PropertyFlag)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.HasEqualContent(BuildSoft.UBSM.Analysis.PropertyFlag)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.PropertyFlag.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.PropertyFlag)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Settings">
            <summary>Analysis settings</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Settings.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Settings"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Settings.General">
            <summary> General analysis settings </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Settings.StandardChecks">
            <summary> Analysis settings which depend on the Standard </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Settings.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Settings" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Settings.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Settings.Equals(BuildSoft.UBSM.Analysis.Settings)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Settings.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Settings.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Settings.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.StandardCheck">
            <summary>Standard dependend analysis settings </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.StandardCheck.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.StandardCheck"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.StandardCheck.Standard">
            <summary>Standard that these settings apply to</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.StandardCheck.General">
            <summary> General analysis settings for the Standard </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.StandardCheck.Bars">
            <summary> Analysis settings for analysis bars (<see cref="T:BuildSoft.UBSM.Analysis.Geometry.Bar" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.StandardCheck.Plates">
            <summary> Analysis settings for analysis plates (<see cref="T:BuildSoft.UBSM.Analysis.Geometry.Plate" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.StandardCheck.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.StandardCheck" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.StandardCheck.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.StandardCheck.Equals(BuildSoft.UBSM.Analysis.StandardCheck)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.StandardCheck.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.StandardCheck.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.StandardCheck.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition">
            <summary>Defines a boundary condition for a single degree of freedom</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.BoundaryConditionType">
            <summary>Defines the type for the boundary condition. It is useful to get the quantities and linear spring value</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.ReleaseMode">
            <summary>Defines the release mode for the boundary condition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.WithFunction">
            <summary>Check whether this boundary condition is defined by a function</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.FunctionID">
            <summary>Associated function ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.IsFixed">
            <summary>True if this boundary condition is fully restrained</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.LinearSpring">
            <summary>Value of the linear spring</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.Equals(BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BoundaryCondition.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.SoilLayer">
            <summary>Describes a single geometrical soil layer</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Geometry.SoilLayer"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.Thickness">
            <summary>Thickness of the soil layer [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.Properties">
            <summary>Set of properties for the soil layer</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.SoilLayer" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.Equals(BuildSoft.UBSM.Analysis.Geometry.SoilLayer)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilLayer.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.SoilProfile">
            <summary>Describes a soil profile</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.DatabaseHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.DatabaseContentHashCode">
            <summary>
            The content hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.DatabaseCriticalContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.ProfileType">
            <summary>Type of profile</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.Name">
            <summary>Localizable name of the soil profile</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.BottomLayerFixed">
            <summary>Determines if the bottom layer is fixed (by a rock layer) or continues infinitely</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.Layers">
            <summary>List of soil layers ordered from top to bottom</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.LastChanged">
            <summary>Date at which the soil profile was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.Status">
            <summary>Indicates the status of the soil profile in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.ReadOnly">
            <summary>Indicates if the soil profile is read only because it is a default soil profile and not a user-defined soil profile</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.SoilProfile" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.Equals(BuildSoft.UBSM.Analysis.Geometry.SoilProfile)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.HasEqualContent(BuildSoft.UBSM.Analysis.Geometry.SoilProfile)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilProfile.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.Geometry.SoilProfile)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.SoilSupport">
            <summary>Describes a support given by a soil profile</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.ProfileID">
            <summary>Soil profile ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.ReferenceHeight">
            <summary>The absolute Y-coordinate of the ground level</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.FreaticDepth">
            <summary>Depth of the freatic surface measured from ground level (&gt;= 0)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.ResistsToTension">
            <summary>Determines whether or not the generated soil springs can resist to tension</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.SoilSupport" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.Equals(BuildSoft.UBSM.Analysis.Geometry.SoilSupport)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.SoilSupport.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.Point">
            <summary>Definition of a geometric point. All structural elements are connected through points</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.ID">
            <summary>Point ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.Name">
            <summary>Localizable name of the point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.Location">
            <summary>Point location [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.LocalCS">
            <summary>Local coordinate system (right-handed)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.IsSupportedAlongLocalCS">
            <summary>Indicates if the point is supported along the local coordinate system or if the point is supported along the global coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.Tx">
            <summary>Boundary condition for the displacement in the x-direction [N/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.Ty">
            <summary>Boundary condition for the displacement in the y-direction [N/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.Tz">
            <summary>Boundary condition for the displacement in the z-direction [N/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.Rx">
            <summary>Boundary condition for the rotation around the x-axis [N·m/rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.Ry">
            <summary>Boundary condition for the rotation around the y-axis [N·m/rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.Rz">
            <summary>Boundary condition for the rotation around the z-axis [N·m/rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Point.AdditionalParameters">
            <summary>Optional additional parameters</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Point.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Point" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Point.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Point.Equals(BuildSoft.UBSM.Analysis.Geometry.Point)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Point.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Point.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Point.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity">
            <summary>Describes the connectivity of a bar's end</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.Nx">
            <summary>End condition for normal forces (tension &gt; 0)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.Vy">
            <summary>End condition in relation to shear forces according to the Y-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.Vz">
            <summary>End condition in relation to shear forces according to the Z-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.Mx">
            <summary>End condition for torsion (moments around the X-local direction)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.My">
            <summary>End condition for bending moments around the Y-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.Mz">
            <summary>End condition for bending moments around the Z-local direction</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.Equals(BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEndConnectivity.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.BarEnd">
            <summary>Describes the end of a bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEnd.PointID">
            <summary>Analysis point ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEnd.GlobalOffset">
            <summary>The offset referred to the global coordinate system [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEnd.LocalOffset">
            <summary>The offset referred to the local coordinate system [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEnd.CardinalPoint">
            <summary>Cardinal point referred to the reference line which is defined from the start point to end point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarEnd.Connectivity">
            <summary>Describes how this bar end connects to other elements</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEnd.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarEnd" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEnd.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEnd.Equals(BuildSoft.UBSM.Analysis.Geometry.BarEnd)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEnd.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEnd.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarEnd.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.Bar">
            <summary>Describes a straight bar</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.Bar.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Bar"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.ID">
            <summary>Bar ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.PhysicalID">
            <summary>The ID of the physical parent element from which this bar was created. Use when the physical parent is defined</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.SectionID">
            <summary> The ID of the section to be used for analysis, the section of the physical parent will be used if the default or invalid <see cref="T:System.Guid" /> is provided </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.MaterialOverrides">
            <summary>Defines a list of materials to replace in the bar cross-section definition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Name">
            <summary>Localizable name of the bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.BarType">
            <summary>Defines the bar's structural behaviour</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.PhysicalParentType">
            <summary>Defines the type of the physical bar's parent</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.LocalCS">
            <summary>Local coordinate system (right-handed)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Begin">
            <summary>Definition of the bar's beginning</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.End">
            <summary>Definition of the bar's end</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.IsSupportedAlongLocalCS">
            <summary>Indicates if the bar is supported along the local coordinate system or if the bar is supported along the global coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.SupportAngle">
            <summary>Rotation angle around the local x-axis for the supports [rad]. Is positive when the local x-axis points to you and the rotation is counterclockwise</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.SectionMirroredAroundZAxis">
            <summary>Indicates that the provided section should be mirrored around the z-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.SupportType">
            <summary>Flag to describe the support behaviour</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Tx">
            <summary>Boundary condition for the displacement in the x-direction [N/m / m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Ty">
            <summary>Boundary condition for the displacement in the y-direction [N/m / m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Tz">
            <summary>Boundary condition for the displacement in the z-direction [N/m / m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Rx">
            <summary>Boundary condition for the rotation around the x-axis [Nm/m / rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Ry">
            <summary>Boundary condition for the rotation around the y-axis [Nm/m / rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Rz">
            <summary>Boundary condition for the rotation around the z-axis [Nm/m / rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.Soil">
            <summary>Soil support</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Bar.AdditionalParameters">
            <summary>Optional additional parameters</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Bar.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Bar" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Bar.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Bar.Equals(BuildSoft.UBSM.Analysis.Geometry.Bar)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Bar.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Bar.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Bar.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.Plate">
            <summary>Describes a flat plate. The outline is defined by a list of edges which can be described in clockwise or counterclockwise order indistinctly</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.Plate.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Plate"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.ID">
            <summary>Plate ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.PhysicalID">
            <summary>The ID of the physical parent element from which this plate was created. Use when the physical parent is defined</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.SectionID">
            <summary> The ID of the section to be used for analysis, the section of the physical parent will be used if the default or invalid <see cref="T:System.Guid" /> is provided </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.MaterialOverrides">
            <summary>Defines a list of materials to replace in the plate section definition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.PhysicalParentType">
            <summary>Defines the type of the physical plate's parent</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.Name">
            <summary>Localizable name of the plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.LocalCS">
            <summary>Local coordinate system (right-handed). The 2D polygonal plate outline is defined in the local XZ-plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.InternalOpenings">
            <summary>List of plate's openings</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.Edges">
            <summary>List of edges to define the polygon and the connectivity of the plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.IsSupportedAlongLocalCS">
            <summary>Indicates if the plate is supported along the local coordinate system or if the plate is supported along the global coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.SupportType">
            <summary>Flag to describe the support behaviour</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.Tx">
            <summary>Boundary condition for the displacement in the x-direction [N/m² / m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.Ty">
            <summary>Boundary condition for the displacement in the y-direction [N/m² / m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.Tz">
            <summary>Boundary condition for the displacement in the z-direction [N/m² / m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.Soil">
            <summary>Soil support</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Plate.AdditionalParameters">
            <summary>Optional additional parameters</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Plate.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Plate" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Plate.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Plate.Equals(BuildSoft.UBSM.Analysis.Geometry.Plate)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Plate.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Plate.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Plate.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity">
            <summary>Defines how the plate connects through the edge. The local CS of an edge is defined as follow: The Y-axis is parallel to the Plate's Y-axis, the X-axis is parallel to the edge, point to the plate and Z-axis completes the triad</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.Normal">
            <summary>End condition for normal forces (tension &gt; 0)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.InPlaneShear">
            <summary>End condition in relation to in plane shear forces along the edge</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.OutOfPlaneShear">
            <summary>End condition in relation to shear forces according to the Y-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.Mx">
            <summary>End condition for torsion (moments around the X-local direction)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.My">
            <summary>End condition for bending moments around the Y-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.Mz">
            <summary>End condition for bending moments around the Z-local direction</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.Equals(BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdgeConnectivity.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.BarGroup">
            <summary>Defines a set of bars that are grouped for a specific purpose</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroup.ID">
            <summary>Bar group ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroup.Name">
            <summary>Localizable name of the bar group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroup.GroupType">
            <summary>Describes the purpose of the bar group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroup.BarIDs">
            <summary>List of the grouped bar IDs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarGroup.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarGroup" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarGroup.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarGroup.Equals(BuildSoft.UBSM.Analysis.Geometry.BarGroup)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarGroup.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarGroup.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.BarGroup.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.PlateGroup">
            <summary>Defines a set of plates that are grouped for a specific purpose</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.ID">
            <summary>Plate group ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.Name">
            <summary>Localizable name of the plate group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.GroupType">
            <summary>Describes the purpose of the plate group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.PlateIDs">
            <summary>List of the grouped plate IDs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.PlateGroup" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.Equals(BuildSoft.UBSM.Analysis.Geometry.PlateGroup)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateGroup.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.NamespaceDoc">
            <summary>Exchange library for describing the geometry of the analytical model</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.BoundaryConditionType">
            <summary>Provides a set of predefined types of boundary conditions</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryConditionType.PointDisplacement">
            <summary>Point displacement type [N/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryConditionType.PointRotation">
            <summary>Point rotation type [N·m/rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryConditionType.LineDisplacement">
            <summary>Line displacement type [N/m / m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryConditionType.LineRotation">
            <summary>Line rotation type [N·m/m / rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BoundaryConditionType.SurfaceDisplacement">
            <summary>Surface displacement type [N/m² / m]</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.ReleaseMode">
            <summary>Provides a set of possible release mode of a boundary condition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.ReleaseMode.None">
            <summary>Indicates that the restrained is not free in the both axis directions</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.ReleaseMode.Positive">
            <summary>Indicates that the restrained is free in the negative axis direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.ReleaseMode.Negative">
            <summary>Indicates that the restrained is free in the positive axis direction</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.ProfileType">
            <summary>Provides a set of possible profile types used for classification and characterization of the soil profiles</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.ProfileType.Terzaghi">
            <summary>Soil parameters come from the Static Cone Penetration Test - CPT (Terzaghi's correlation)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.ProfileType.Menard">
            <summary>Soil parameters come from the Menard pressiometer</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint">
            <summary> Provides a set of possible values to describe the spatial relation between the cross-section of a bar and its reference axis. Values 0 to 9 refer to points at the bounding box of the cross-section and the 10 value refers to geometric centroid. </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.BottomLeft">
            <summary>The bottom left of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.BottomCentre">
            <summary>The bottom centre of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.BottomRight">
            <summary>The bottom right of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.MidDepthLeft">
            <summary>The mid-depth left of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.MidDepthCentre">
            <summary>The mid-depth centre of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.MidDepthRight">
            <summary>The mid-depth right of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.TopLeft">
            <summary>The top left of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.TopCentre">
            <summary>The top centre of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.TopRight">
            <summary>The top right of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarCardinalPoint.GeometricCentroid">
            <summary>The geometric centroid (usually the centre of gravity) of the cross-section</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.SupportType">
            <summary>Provides a set of possible ways to support a structural element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SupportType.Unsupported">
            <summary>The element is not supported, is free. Ignore all support information</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SupportType.BoundaryConditions">
            <summary>The support is given by the boundary conditions. Only take information into account related to the boundary conditions</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SupportType.Soil">
            <summary>The support is given by the soil profile. Only take information into account related to the soil</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.SupportType.BoundaryConditionsAndSoil">
            <summary>The support is given by the boundary conditions and the soil. Take into account both the boundary conditions and soil data</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.PhysicalParentType">
            <summary>Provides a set of possible values to describe the type of parent of an analysis element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PhysicalParentType.None">
            <summary>The analysis element's parent is not defined (applies for example for rigid links, model lines)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PhysicalParentType.Bar">
            <summary>The analysis element comes from a physical bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PhysicalParentType.PolyBar">
            <summary>The analysis element comes from a physical polybar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PhysicalParentType.Plate">
            <summary>The analysis element comes from a physical plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PhysicalParentType.PadFooting">
            <summary>The analysis element comes from a physical pad footing</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.AnalysisElementType">
            <summary>Provides a set of possible values to describe the type of the analysis element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.AnalysisElementType.Point">
            <summary>The analysis element is a point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.AnalysisElementType.Bar">
            <summary>The analysis element is a bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.AnalysisElementType.Plate">
            <summary>The analysis element is a plate</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.BarType">
            <summary>Provides a set of possible bar types to describe the structural behaviour of a bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarType.ModelLine">
            <summary>The bar is only used to define a line in the model, e.g. a plate edge (the bar is not a structural element)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarType.StructuralElement">
            <summary>The bar is a structural bar element with material and section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarType.TieRod">
            <summary>The bar is a defined as a tie rod</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarType.RigidLink">
            <summary>The bar is a rigid link</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.BarGroupType">
            <summary>Provides a set of possible bar group types to describe the purpose of a bar group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroupType.Custom">
            <summary>Group made for no specific purpose</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroupType.Section">
            <summary>Group shares a section, only the section information of the first bar in the list is retained</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroupType.Loads">
            <summary>Group is used to define loads that span multiple bars</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroupType.BucklingStrong">
            <summary>Group for buckling around the strong axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroupType.BucklingWeak">
            <summary>Group for buckling around the weak axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.BarGroupType.Torsion">
            <summary>Group for torsion</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.PlateGroupType">
            <summary>Provides a set of possible plate group types to describe the purpose of a plate group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateGroupType.Custom">
            <summary>Group made for no specific purpose</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateGroupType.Loads">
            <summary>Group is used to define loads that span multiple plates</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateGroupType.Section">
            <summary>Group is used to define variable sections that span multiple plates</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.PlateEdge">
            <summary>Defines a plate edge</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.BeginPointID">
            <summary> Is the ID of the point at the beginning of the edge. The end point ID for this plate edge is the <see cref="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.BeginPointID" /> of the next edge </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.Connectivity">
            <summary>Describes how this plate edge connects to other elements</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.PlateEdge" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.Equals(BuildSoft.UBSM.Analysis.Geometry.PlateEdge)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.PlateEdge.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Geometry.Polygon">
            <summary>Describes a polygon whose vertices are defined by the analysis point IDs sequence</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Geometry.Polygon.Vertices">
            <summary>List of point IDs defining the polygon's vertices, which can be described in clockwise or counterclockwise order indistinctly</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Polygon.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Polygon" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Polygon.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Polygon.Equals(BuildSoft.UBSM.Analysis.Geometry.Polygon)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Polygon.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Polygon.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Geometry.Polygon.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.Settings">
            <summary>Mesh settings</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.Settings.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Mesh.Settings"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Settings.ElementType">
            <summary>Type of the elements to which the mesh settings apply</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Settings.IDs">
            <summary>List of elementIDs to which the mesh settings apply (empty list == all elements)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Settings.MeshSettings">
            <summary> Mesh settings (<see cref="T:BuildSoft.UBSM.Analysis.Mesh.Settings.KeyVal" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Settings.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.Settings" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Settings.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Settings.Equals(BuildSoft.UBSM.Analysis.Mesh.Settings)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Settings.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Settings.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Settings.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.Line2">
            <summary>Line element with 2 nodes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line2.ID">
            <summary>Line ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line2.IsRigidLink">
            <summary>A flag that indicates whether this line element behaves as a rigid link between the end nodes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line2.Node1">
            <summary>First node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line2.Node2">
            <summary>Second node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line2.LocalCS">
            <summary>Local coordinate system of the line element</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line2.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.Line2" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line2.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line2.Equals(BuildSoft.UBSM.Analysis.Mesh.Line2)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line2.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line2.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line2.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.Line3">
            <summary>Quadratic line element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line3.ID">
            <summary>Line ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line3.IsRigidLink">
            <summary>A flag that indicates whether this line element behaves as a rigid link between the end nodes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line3.Node1">
            <summary>First node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line3.Node2">
            <summary>Second node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line3.Node12">
            <summary>Intermediate node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Line3.LocalCS">
            <summary>Local coordinate system of the line element</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line3.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.Line3" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line3.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line3.Equals(BuildSoft.UBSM.Analysis.Mesh.Line3)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line3.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line3.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Line3.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.NamespaceDoc">
            <summary>Exchange library for describing the meshing of elements of the analysis model</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.Node">
            <summary>Mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Node.ID">
            <summary>Mesh node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Node.Location">
            <summary>Location of the node</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Node.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.Node" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Node.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Node.Equals(BuildSoft.UBSM.Analysis.Mesh.Node)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Node.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Node.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Node.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.Triangle3">
            <summary>Linear triangular element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle3.ID">
            <summary>Triangle ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle3.Node1">
            <summary>First node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle3.Node2">
            <summary>Second node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle3.Node3">
            <summary>Third node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle3.LocalCS">
            <summary>Local coordinate system of the triangular element</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle3.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.Triangle3" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle3.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle3.Equals(BuildSoft.UBSM.Analysis.Mesh.Triangle3)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle3.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle3.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle3.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.Triangle6">
            <summary>Quadratic triangular element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle6.ID">
            <summary>Triangle ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Node1">
            <summary>First node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Node2">
            <summary>Second node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Node3">
            <summary>Third node ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Node12">
            <summary>ID of the intermediate node between the first and the second node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Node23">
            <summary>ID of the intermediate node between the second and the third node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Node31">
            <summary>ID of the intermediate node between the third and the first node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.Triangle6.LocalCS">
            <summary>Local coordinate system of the triangular element</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle6.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.Triangle6" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Equals(BuildSoft.UBSM.Analysis.Mesh.Triangle6)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle6.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle6.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.Triangle6.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh">
            <summary>Mesh in the analysis model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh.ID">
            <summary>Mesh ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh.ElementMeshes">
            <summary>List of element meshes</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh.Equals(BuildSoft.UBSM.Analysis.Mesh.GeometryMesh)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.GeometryMesh.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.ElementMesh">
            <summary>Mesh of an element in the analysis model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.ElementType">
            <summary>Type of the analysis element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.ElementID">
            <summary>Analysis element ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.Nodes">
            <summary>List of nodes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.Lines">
            <summary>List of lines</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.QuadraticLines">
            <summary>List of quadratic lines</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.Triangles">
            <summary>List of triangles</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.QuadraticTriangles">
            <summary>List of quadratic triangles</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.ElementMesh" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.Equals(BuildSoft.UBSM.Analysis.Mesh.ElementMesh)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.ElementMesh.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Mesh.SectionMesh">
            <summary>Describes the mesh of a cross-section for advanced cross-sectional analysis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.ID">
            <summary>Section mesh ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.SectionID">
            <summary>Corresponding cross-section ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.Nodes">
            <summary>List of nodes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.Lines">
            <summary>List of lines</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.QuadraticLines">
            <summary>List of quadratic lines</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.Triangles">
            <summary>List of triangles</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.QuadraticTriangles">
            <summary>List of quadratic triangles</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Mesh.SectionMesh" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.Equals(BuildSoft.UBSM.Analysis.Mesh.SectionMesh)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Mesh.SectionMesh.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.Axle">
            <summary>Describes an axle for a train load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Axle.Distance">
            <summary>Distance from the start to the location where the loads are applied</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Axle.F">
            <summary>Acting load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Axle.M">
            <summary>Acting moment</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Axle.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.Axle" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Axle.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Axle.Equals(BuildSoft.UBSM.Analysis.Loads.Axle)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Axle.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Axle.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Axle.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.CombinationGroup">
            <summary>Describes a group of combinations</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.ID">
            <summary>Combination group ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.Name">
            <summary>Localizable name of the combination group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.Standard">
            <summary>Standard associated with this group of combinations</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.Category">
            <summary>Category for this group of combinations</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.Combinations">
            <summary>List of combinations</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.CombinationGroup" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.Equals(BuildSoft.UBSM.Analysis.Loads.CombinationGroup)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationGroup.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings">
            <summary>General settings for a crane load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings.SampleCount">
            <summary>Number of samples that should be taken into account</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings.LoadDefinition">
            <summary>All crane load settings to use</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings.Equals(BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoadSettings.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum">
            <summary>A custom spectrum definition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.Acceleration">
            <summary>Acceleration [m/s²]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.DisplacementFactor">
            <summary>Displacement factor</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.ReferencePeriod">
            <summary>Reference period to take into account</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.IsSpline">
            <summary>Interpolate as spline</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.Points">
            <summary>Spectrum points</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.Equals(BuildSoft.UBSM.Analysis.Loads.CustomSpectrum)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CustomSpectrum.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour">
            <summary>Describes the dynamic behaviour of the load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.BehaviourType">
            <summary>Type of behaviour</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.SupportAccelerationSettings">
            <summary>Support acceleration settings when this type is chosen, otherwise ignored</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.FunctionType">
            <summary>For Diamonds: None, Sine, IntPulse, Linear, General</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.Parameters">
            <summary>Extra parameters to describe the dynamic behaviour. Key-Value pairs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.Equals(BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviour.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.DynamicDomain">
            <summary>Information about the dynamic domain</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.Periodic">
            <summary>The dynamic load is periodic or a single event</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.Synchronized">
            <summary>Indicates if subloads are synchronized or not</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.UseAbsolutePeriod">
            <summary>Indicates if an absolute period is used or one relative to the dynamic modes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.AbsolutePeriod">
            <summary>Size of the period [s]. Only when absolute period is used, otherwise ignored.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.RelativePeriodReferenceMode">
            <summary>Reference mode when no absolute period is used, otherwise ignored</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.RelativePeriodFraction">
            <summary>Expresses the fraction Period/ModePeriod</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.SamplePoints">
            <summary>Number of sample points to use</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.EnforceMinimumSamplePointsPerPeriod">
            <summary>Add extra sample points to guarantee a minimum number of sample points per period</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.MinimumSamplePointsPerPeriod">
            <summary>Minimum number of sample points per period when enforced</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.ResultPoints">
            <summary>Number of result points</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.ApplyQSC">
            <summary>Use quasi-static correction</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.DynamicDomain" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.Equals(BuildSoft.UBSM.Analysis.Loads.DynamicDomain)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicDomain.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase">
            <summary>Describe a dynamic load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.ID">
            <summary>Load case ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.Disabled">
            <summary>Indicates if the load case is taken into account</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.AllSubLoadCasesTogether">
            <summary>Indicates if all subloads act together or not</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.Name">
            <summary>Localizable name of the load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.DomainInformation">
            <summary>Dynamic domain information</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.LoadCaseType">
            <summary>Type of load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.LoadCaseTypeDescription">
            <summary>Description of the type used for recognition of subtypes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.Parameters">
            <summary>List of parameters, grouped by Standard</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.SubLoadCases">
            <summary>List of subload cases</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.Equals(BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicLoadCase.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.Incompatibility">
            <summary>Defines the incompatibility bewtween two load cases. Two incompatible load cases cannot be included in the same combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Incompatibility.ID1">
            <summary>ID of the first load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Incompatibility.ID2">
            <summary>ID of the second load case</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Incompatibility.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.Incompatibility" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Incompatibility.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Incompatibility.Equals(BuildSoft.UBSM.Analysis.Loads.Incompatibility)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Incompatibility.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Incompatibility.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Incompatibility.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.LineLoad">
            <summary>Load acting on a line defined by a bar or by a bar group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.ReferenceType">
            <summary>Type of element this load acts upon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.ReferenceID">
            <summary>ID of the bar or bar group where this load acts upon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.ParticipatingMembers">
            <summary> Only applicable when the reference type is a <see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarGroup" />, otherwise ignored. Enumerates the bar group IDs where this load acts upon </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.F1">
            <summary>Acting load at start distance</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.M1">
            <summary>Acting moment at start distance</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.Distance1">
            <summary> Distance from the start of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Bar" />/<see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarGroup" /> (ignored for other reference types) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.F2">
            <summary>Acting load at end distance</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.M2">
            <summary>Acting moment at end distance</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.Distance2">
            <summary> Distance from the end of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Bar" />/<see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarGroup" /> (ignored for other reference types) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoad.LoadType">
            <summary>The type of line load related to the coordinate system</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LineLoad.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.LineLoad" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LineLoad.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LineLoad.Equals(BuildSoft.UBSM.Analysis.Loads.LineLoad)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LineLoad.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LineLoad.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LineLoad.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters">
            <summary>Parameters for a load case according to a Standard</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by load cases
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.Standard">
            <summary>Standard that these parameters apply to</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.Values">
            <summary>Parameters for the corresponding Standard. Key-Value pairs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.Equals(BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseParameters.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.PointLoad">
            <summary>Load acting on a single point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.PointLoad.ReferenceType">
            <summary>Type of element this load acts upon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.PointLoad.ReferenceID">
            <summary>ID of the element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.PointLoad.ParticipatingMembers">
            <summary> Only applicable when the reference type is a <see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarGroup" /> or <see cref="T:BuildSoft.UBSM.Analysis.Geometry.PlateGroup" />, otherwise ignored. Enumerates the possible elements this load can act upon </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.PointLoad.F">
            <summary>Acting load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.PointLoad.M">
            <summary>Acting moment</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.PointLoad.Distance">
            <summary> Distance from the start of the <see cref="T:BuildSoft.UBSM.Analysis.Geometry.Bar" />/<see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarGroup" /> (ignored for other reference types) to the location where the point load is applied </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.PointLoad.IsAlignedWithLocalCS">
            <summary>Indicates if the loads are aligned with the local coordinate system of the element they act upon or are aligned with the global coordinate system</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.PointLoad.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.PointLoad" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.PointLoad.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.PointLoad.Equals(BuildSoft.UBSM.Analysis.Loads.PointLoad)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.PointLoad.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.PointLoad.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.PointLoad.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase">
            <summary>Describes a seismic load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.ID">
            <summary>Load case ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.Disabled">
            <summary>Indicates if the load case is taken into account</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.Name">
            <summary>Localizable name of the load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.Settings">
            <summary>Seismic settings</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.Equals(BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCase.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters">
            <summary>Seismic parameters</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.Standard">
            <summary>Standard these parameters apply to</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.Settings">
            <summary> Settings (<see cref="T:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.KeyVal" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.CustomU">
            <summary>Custom spectrum in main direction U</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.CustomV">
            <summary>Custom spectrum in main direction V</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.CustomW">
            <summary>Custom spectrum in vertical direction</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.Equals(BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SeismicLoadCaseParameters.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings">
            <summary>Settings for snow loads</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Settings"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.Standard">
            <summary>Standard these settings apply to</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.Values">
            <summary> Settings (<see cref="T:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.KeyVal" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.Equals(BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SnowLoadSettings.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase">
            <summary>Describes a static load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.ID">
            <summary>Load case ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.Disabled">
            <summary>Indicates if the load case is taken into account</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.Name">
            <summary>Localizable name of the load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.AllSubLoadCasesTogether">
            <summary>Indicates if all subloads act together or not</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.LoadCaseType">
            <summary>Type of load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.LoadCaseTypeDescription">
            <summary>Description of the type used for recognition of subtypes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.Parameters">
            <summary>List of parameters, grouped by Standard</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.SubLoadCases">
            <summary>List of subload cases</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.CraneLoadSettings">
            <summary>Settings of crane loads if applicable, otherwise ignored</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.WindLoadSettings">
            <summary>Settings of wind loads if applicable, otherwise ignored</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.SnowLoadSettings">
            <summary>Settings of snow loads if applicatble, otherwise ignored</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.Equals(BuildSoft.UBSM.Analysis.Loads.StaticLoadCase)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticLoadCase.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters">
            <summary>Parameters to describe a support acceleration</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters.Acceleration">
            <summary>Acceleration [m/s²]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters.Direction">
            <summary>Direction for the support acceleration</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters.Equals(BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SupportAccelerationParameters.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad">
            <summary>Load acting on a surface of a plate or plate group</summary>
            <remarks> Positions <see cref="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.P1" />, <see cref="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.P2" /> and <see cref="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.P3" /> are related to the gravity center of the outer polygon of the plate or plate group where this load acts upon </remarks>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.ReferenceType">
            <summary>Type of element this load acts upon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.ReferenceID">
            <summary>ID of the plate or plate group where this load acts upon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.P1">
            <summary>First point local position</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.F1">
            <summary>Acting load at first point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.P2">
            <summary>Second point local position</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.F2">
            <summary>Acting load at second point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.P3">
            <summary>Third point local position</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.F3">
            <summary>Acting load at third point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.LoadType">
            <summary>The type of surface load related to the coordinate system</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.Equals(BuildSoft.UBSM.Analysis.Loads.SurfaceLoad)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.SurfaceLoad.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad">
            <summary>Describes a temperature line loads</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.ReferenceType">
            <summary> Type of element this load acts upon (<see cref="T:BuildSoft.UBSM.Analysis.Geometry.Bar" />/<see cref="T:BuildSoft.UBSM.Analysis.Geometry.BarGroup" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.ReferenceID">
            <summary>ID of the bar or bar group where this load acts upon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.Uniform">
            <summary>Uniform temperature variation [K]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.GradientY">
            <summary>Gradient in the local Y direction [K]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.GradientZ">
            <summary>Gradient in the local Z direction [K]</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.Equals(BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLineLoad.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase">
            <summary>Describes a static load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.ID">
            <summary>Load case ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.Disabled">
            <summary>Indicates if the load case is taken into account</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.AllSubLoadCasesTogether">
            <summary>Indicates if all subloads act together or not</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.Name">
            <summary>Localizable name of the load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.SubLoadCases">
            <summary>List of subload cases</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.Parameters">
            <summary>List of parameters, grouped by Standard</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.Equals(BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureLoadCase.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad">
            <summary>Describes a temperature surface load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.ReferenceType">
            <summary> Type of element this load acts upon (<see cref="T:BuildSoft.UBSM.Analysis.Geometry.Plate" />/<see cref="T:BuildSoft.UBSM.Analysis.Geometry.PlateGroup" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.ReferenceID">
            <summary>ID of the plate or plate group where this load acts upon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.Uniform">
            <summary>Uniform temperature variation [K]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.Gradient">
            <summary>Gradient imposed on the cross section [K]</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.Equals(BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSurfaceLoad.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.Track">
            <summary>Track used by a train load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Track.MirroredTrain">
            <summary>Flags the train should be inverted</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Track.StartOffset">
            <summary>Start offset for the train</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Track.EndOffset">
            <summary>End offset of the train</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Track.BarGroupID">
            <summary>ID of the bargroup that forms the track</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Track.SynchronizationPointIDs">
            <summary>Lists of points where the train should be synchronized between tracks</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Track.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.Track" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Track.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Track.Equals(BuildSoft.UBSM.Analysis.Loads.Track)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Track.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Track.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Track.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.TrainLoad">
            <summary>Describes a train load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.Name">
            <summary>Localizable name of the train load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.Length">
            <summary>Length of the train load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.IsAlignedWithLocalCS">
            <summary>Indicates if the loads are aligned with the local coordinate system of the element they act upon or are aligned with the global coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.Axles">
            <summary>Set of axles for this train load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.LastChanged">
            <summary>Date at which the train load was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.Status">
            <summary>Indicates the status of the train load in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TrainLoad.ReadOnly">
            <summary>Indicates if the train load is read only because it is a default train load and not a user-defined train load</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TrainLoad.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.TrainLoad" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TrainLoad.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TrainLoad.Equals(BuildSoft.UBSM.Analysis.Loads.TrainLoad)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TrainLoad.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TrainLoad.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TrainLoad.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings">
            <summary>Settings for wind loads</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Settings"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.Standard">
            <summary>Standard these settings apply to</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.Values">
            <summary> Settings (<see cref="T:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.KeyVal" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.Equals(BuildSoft.UBSM.Analysis.Loads.WindLoadSettings)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.WindLoadSettings.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.NamespaceDoc">
            <summary>Exchange library for describing the loads of the analytical model</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.GeometryReferenceType">
            <summary>Reference enumeration to assign a load to a specific type of element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.GeometryReferenceType.Point">
            <summary>Load is applied on a point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.GeometryReferenceType.Bar">
            <summary>Load is applied on a bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.GeometryReferenceType.BarGroup">
            <summary>Load is applied on a bar group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.GeometryReferenceType.Plate">
            <summary>Load is applied on a plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.GeometryReferenceType.PlateGroup">
            <summary>Load is applied on a plate group</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.LineLoadType">
            <summary>Provides a set of possible types used for setting the coordinate system used by line loads</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoadType.GlobalCS">
            <summary>Load is applied in the global coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoadType.AlignedWithLocalCS">
            <summary>Load is applied in the local coordinate system of the element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LineLoadType.GlobalCSProjected">
            <summary>Load is applied in the projected global coordinate system</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.SurfaceLoadType">
            <summary>Provides a set of possible types used for setting the coordinate system used by surface loads</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoadType.GlobalCS">
            <summary>Load is applied in the global coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoadType.AlignedWithLocalCS">
            <summary>Load is applied in the local coordinate system of the element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.SurfaceLoadType.GlobalCSProjected">
            <summary>Load is applied in the projected global coordinate system</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.LoadCaseType">
            <summary>Provides a set of possible load case types</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseType.SelfWeight">
            <summary>Self-weight load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseType.Permanent">
            <summary>A permanent load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseType.LiveLoad">
            <summary>A live load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseType.Wind">
            <summary>A wind load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseType.Snow">
            <summary>A snow load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseType.CraneLoad">
            <summary>A crane load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseType.Fire">
            <summary>A fire load case</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviourType">
            <summary>Provides a set of possible dynamic behaviour types</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviourType.DynamicLoad">
            <summary>The load is dynamic</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicBehaviourType.SupportAcceleration">
            <summary>Supports should be accelerated</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.CombinationCategory">
            <summary>Provides a set of possible values to describe the type of a combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.Custom">
            <summary>User defined type</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.Strength">
            <summary>For strength verifications</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.Service">
            <summary>For serviceability verifications</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.ULS_FC">
            <summary>Ultimate Limit State - Fundamental Combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.ULS_SC">
            <summary>Ultimate Limit State - Seismic Combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.ULS_FI">
            <summary>Ultimate Limit State - Fire</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.ULS_AC">
            <summary>Ultimate Limit State - Accidental Combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.SLS_RC">
            <summary>Serviceability Limit State - Rare Combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.SLS_FC">
            <summary>Serviceability Limit State - Frequent Combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCategory.SLS_QP">
            <summary>Serviceability Limit State - Quasi-Permanent Combination</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.ModelLoads">
            <summary>Defines all the information concerning loads in an analysis model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.ModelLoads.TrainLoads">
            <summary>Train load library</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.ModelLoads.LoadCaseInteraction">
            <summary>Describes the linked and incompatible load cases</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.ModelLoads.StaticLoadCases">
            <summary>A list of all static load cases</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.ModelLoads.DynamicLoadCases">
            <summary>A list of all dynamic load cases</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.ModelLoads.SeismicLoadCases">
            <summary>A list of all seismic load cases</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.ModelLoads.TemperatureLoadCases">
            <summary>A list of all temperature load cases</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.ModelLoads.CombinationTree">
            <summary>A list of all combination group that defines the combination tree</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.ModelLoads.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.ModelLoads" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.ModelLoads.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.ModelLoads.Equals(BuildSoft.UBSM.Analysis.Loads.ModelLoads)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.ModelLoads.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.ModelLoads.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.ModelLoads.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases">
            <summary>Defines those load cases that have the same effects on the model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases.IDs">
            <summary>Linked load case IDs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases.Equals(BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LinkedLoadCases.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction">
            <summary>Defines the interaction among load cases</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction.Incompatible">
            <summary>Set of load case incompatibilities</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction.Linked">
            <summary>Set of linked load cases</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction.Equals(BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.LoadCaseInteraction.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase">
            <summary>Describes a static subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.Name">
            <summary>Localizable name of the subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.PointLoads">
            <summary>List of point loads acting on this subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.LineLoads">
            <summary>List of line loads acting on this subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.SurfaceLoads">
            <summary>List of surface loads acting on this subload case</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.Equals(BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.StaticSubLoadCase.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.CraneLoad">
            <summary>Crane load</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CraneLoad.TrainID">
            <summary>Train to use</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CraneLoad.Tracks">
            <summary>Parallel tracks</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoad.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.CraneLoad" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoad.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoad.Equals(BuildSoft.UBSM.Analysis.Loads.CraneLoad)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoad.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoad.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CraneLoad.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase">
            <summary>Describes a dynamic subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.Name">
            <summary>Localizable name of the subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.Behaviour">
            <summary>Dynamic behaviour</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.PointLoads">
            <summary>List of point loads acting on this subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.LineLoads">
            <summary>List of line loads acting on this subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.SurfaceLoads">
            <summary>List of surface loads acting on this subload case</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.Equals(BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.DynamicSubLoadCase.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase">
            <summary>Describes a termperature subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.Name">
            <summary>Localizable name of the subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.LineLoads">
            <summary>List of temperature line loads acting on this subload case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.SurfaceLoads">
            <summary>List of temperature surface loads acting on this subload case</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.Equals(BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.TemperatureSubLoadCase.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.Combination">
            <summary>Describes a combination of load cases and their coefficients</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Combination.ID">
            <summary>Combination ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Combination.Name">
            <summary>Localizable name of the combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.Combination.Coefficients">
            <summary>List of coefficients</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Combination.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.Combination" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Combination.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Combination.Equals(BuildSoft.UBSM.Analysis.Loads.Combination)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Combination.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Combination.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.Combination.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient">
            <summary>Describes the contribution of a load case to a combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient.LoadCaseID">
            <summary>Load case ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient.Value">
            <summary>List of factors. The contribution of the load case is determined by multiplying all factors</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient.Equals(BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Loads.CombinationCoefficient.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.ResultSet">
            <summary>A result set obtained from a calculation</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultSet.MeshID">
            <summary>The ID of the corresponding geometric or section mesh</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultSet.RecordMap">
            <summary>Mapping between the mesh and record</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultSet.Name">
            <summary>Localizable name of the result set</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultSet.ResultType">
            <summary>Type of result</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultSet.ResultID">
            <summary> ID (&gt; 0) of the load case or load combination for <see cref="F:BuildSoft.UBSM.Analysis.Results.ResultType.LoadCase" /> and <see cref="F:BuildSoft.UBSM.Analysis.Results.ResultType.Combination" /> types. For <see cref="F:BuildSoft.UBSM.Analysis.Results.ResultType.DynamicMode" /> is the dynamic mode order (1..N) and for <see cref="F:BuildSoft.UBSM.Analysis.Results.ResultType.BucklingMode" /> is the buckling mode order (1..N). </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultSet.Tables">
            <summary>Tables grouped by result group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultSet.Options">
            <summary>Extra parameters belonging to this result set. Key-Value pairs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ResultSet.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.ResultSet" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ResultSet.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ResultSet.Equals(BuildSoft.UBSM.Analysis.Results.ResultSet)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ResultSet.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ResultSet.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ResultSet.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.Check">
            <summary>A result set obtained from a check</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Check.Name">
            <summary>Localizable name of the check</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Check.Standard">
            <summary>Standard associated with this check</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Check.Status">
            <summary>The status of the check</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Check.UnityCheck">
            <summary> The ratio demand / capacity in case it is possible to be determined according to the type of check and the status is different than <see cref="F:BuildSoft.UBSM.Analysis.Results.CheckStatus.Unchecked" /></summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Check.Options">
            <summary>Extra parameters belonging to this check. Key-Value pairs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Check.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.Check" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Check.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Check.Equals(BuildSoft.UBSM.Analysis.Results.Check)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Check.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Check.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Check.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.ItemVerification">
            <summary>Represents a set of checks for some item type</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ItemVerification.ItemID">
            <summary>The ID of the corresponding item (e.g. ConnectionID)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ItemVerification.ToolName">
            <summary>The name of the tool/software used to carry out the verification</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ItemVerification.EngineerName">
            <summary>The name of the engineer that carried out the verification</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ItemVerification.Date">
            <summary>The date at which the verification was done (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ItemVerification.Checks">
            <summary>List of checks for the corresponding item</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ItemVerification.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.ItemVerification" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ItemVerification.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ItemVerification.Equals(BuildSoft.UBSM.Analysis.Results.ItemVerification)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ItemVerification.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ItemVerification.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.ItemVerification.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.PhysicalBarID">
            <summary> ID of the corresponding physical bar </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.AnalysisBarID">
            <summary> ID of the corresponding analysis bar </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.ResultsType">
            <summary> Type of result set </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.InternalForces">
            <summary> Internal forces </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.Results">
            <summary> Results </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.ElasticStiffnessWithPositiveMomentY">
            <summary> Elastic stiffness for positive bending about the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.ElasticStiffnessWithNegativeMomentY">
            <summary> Elastic stiffness for negative bending about the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.PlasticStiffnessWithPositiveMomentY">
            <summary> Plastic stiffness for positive bending about the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.PlasticStiffnessWithNegativeMomentY">
            <summary> Plastic stiffness for negative bending about the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.StiffnessClassificationWithPositiveMomentY">
            <summary> Stiffness classification for positive bending about the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.StiffnessClassificationWithNegativeMomentY">
            <summary> Stiffness classification for negative bending about the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.ElasticStiffnessWithPositiveMomentZ">
            <summary> Elastic stiffness for positive bending about the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.ElasticStiffnessWithNegativeMomentZ">
            <summary> Elastic stiffness for negative bending about the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.PlasticStiffnessWithPositiveMomentZ">
            <summary> Plastic stiffness for positive bending about the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.PlasticStiffnessWithNegativeMomentZ">
            <summary> Plastic stiffness for negative bending about the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.StiffnessClassificationWithPositiveMomentZ">
            <summary> Stiffness classification for positive bending about the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.StiffnessClassificationWithNegativeMomentZ">
            <summary> Stiffness classification for negative bending about the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistancePositiveBendingY">
            <summary> Design resistance for positive bending about the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistanceNegativeBendingY">
            <summary> Design resistance for negative bending about the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistancePositiveShearY">
            <summary> Design resistance for positive shear in the y-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistanceNegativeShearY">
            <summary> Design resistance for negative shear in the y-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistancePositiveBendingZ">
            <summary> Design resistance for positive bending about the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistanceNegativeBendingZ">
            <summary> Design resistance for negative bending about the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistancePositiveShearZ">
            <summary> Design resistance for positive shear in the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistanceNegativeShearZ">
            <summary> Design resistance for negative shear in the z-axis </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistancePositiveAxialForce">
            <summary> Design resistance for positive axial force </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.DesignResistanceNegativeAxialForce">
            <summary> Design resistance for negative axial force </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.ColumnBaseFunctionID">
            <summary> ID of the function for the moment-axial force diagram of column bases </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.LoadConfigurationID">
            <summary> ID of the load configuration case </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ConnectionsVerification.KeyVal.WithGeneralResults">
            <summary> Boolean value that indicates if the verification has results </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.NamespaceDoc">
            <summary>Exchange library to handle results and their relation with the analysis model meshes</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.TableOutputType">
            <summary>Output type of a result table</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.TableOutputType.Complete">
            <summary>Describes the complete result</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.TableOutputType.Sub">
            <summary>The result belongs to a partial calculation (e.g. subcombination)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.TableOutputType.Max">
            <summary>The result corresponds to the maximum values of an envelope or load that includes alternating values (e.g. seismic, dynamic, etc.)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.TableOutputType.Min">
            <summary>The result corresponds to the minimum values of an envelope or load that includes alternating values (e.g. seismic, dynamic, etc.)</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.ResultGroup">
            <summary>Set of possible result groups</summary>
            <remarks> The following picture shows the convention for the results in UBSM for 1D and 2D elements.<br /><img src="\images\UBSMConventions.png" /><br /><img src="\images\UBSMConventions2.png" /></remarks>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.NoResult">
            <summary>No result</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.NodalDisplacement">
            <summary>Nodal displacements: dx [m], dy [m], dz [m], phiX [rad], phiY [rad], phiZ [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.NodalReaction">
            <summary>Reaction forces: Rx [N], Ry [N], Rz [N], RMx [Nm], RMy [Nm], RMz [Nm]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.LineReaction">
            <summary>Reaction forces: Rx [N/m], Ry [N/m], Rz [N/m], RMx [Nm/m], RMy [Nm/m], RMz [Nm/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.LineInternalForces">
            <summary>Internal forces: N [N], Tx [Nm], My [Nm], Mz [Nm], Vy [N], Vz [N] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.LineReinforcement">
            <summary>Reinforcement: AySup [m²], AyInf [m²], AzSup [m²], AzInf [m²], Awy [m²/m], Awz [m²/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.LineVerification">
            <summary>Verification: Resistance [-], Stability [-]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.LineStress">
            <summary>Stress: StrongBottom [N/m²], StrongTop [N/m²], WeakBottom [N/m²], WeakTop [N/m²]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.Line2ndOrder">
            <summary>SecondOrder: DeltaN [N], DeltaMy [Nm],DeltaMz [Nm]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.LineCracking">
            <summary>Cracking: StrongWkSup [m], StrongWkInf [m], WeakWkSup [m], WeakWkInf [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.TriangleReaction">
            <summary>Reaction forces: Rx [N/m²], Ry [N/m²], Rz [N/m²]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.TriangleInternalForces">
            <summary>Internal forces: Nxx [N/m], Nzz [N/m], Nxz [N/m], Mxx [Nm/m], Mzz [Nm/m], Mxz [Nm/m], Vx [N/m], Vz [N/m], N1 [N/m], N2 [N/m], M1 [Nm/m], M2 [Nm/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.TriangleReinforcement">
            <summary>Reinforcement: AxSup [m²/m], AxInf [m²/m], AzSup [m²/m], AzInf [m²/m], Aw [m²/m²]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.TriangleStress">
            <summary>Stress: Sxx [N/m²], Szz [N/m²], Sxz [N/m²], Seff [N/m²], S1 [N/m²], S2 [N/m²], Ixx [N/m²], Izz [N/m²], Ixz [N/m²], Ieff [N/m²], I1 [N/m²], I2 [N/m²]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.TriangleCracking">
            <summary>Cracking: WkSup [m], WkInf [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.BucklingInfo">
            <summary>Buckling: U [m], Phi [rad], V [N], M [Nm]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.ModalInfo">
            <summary>ModalInfo: Freq [Hz], Mass [-], Stiff [-], Damp [-], CritDamp [-], DampRatio [-]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultGroup.Temperature">
            <summary>Temperature: Time [s], MinTemperature [K], MaxTemperature [K]</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.ResultType">
            <summary>Provides a set of result types</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultType.LoadCase">
            <summary>Results correspond to a load case</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultType.Combination">
            <summary>Results correspond to a load combination</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultType.DynamicMode">
            <summary>Results correspond to a dynamic mode</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultType.BucklingMode">
            <summary>Results correspond to a buckling mode</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.ResultType.ThermalSection">
            <summary>Results correspond to a cross-section in a thermal calculation</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.CheckStatus">
            <summary>Set of possible check status</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.CheckStatus.Unchecked">
            <summary>Unchecked status. No checks have been done</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.CheckStatus.Satisfactory">
            <summary>Satisfies the applied check</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.CheckStatus.Failure">
            <summary>Does not satisfy the applied check</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.NodeMappingItem">
            <summary>Used for mapping nodal results</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.NodeMappingItem.SourceID">
            <summary>ID of the mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.NodeMappingItem.RecordIndex">
            <summary>Index in the result record</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.NodeMappingItem.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.NodeMappingItem" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.NodeMappingItem.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.NodeMappingItem.Equals(BuildSoft.UBSM.Analysis.Results.NodeMappingItem)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.NodeMappingItem.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.NodeMappingItem.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.NodeMappingItem.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.Line2MappingItem">
            <summary>Used for mapping line results</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.SourceID">
            <summary>ID of the mesh line</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.RecordIndex1">
            <summary>Index in the result record for first mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.RecordIndex2">
            <summary>Index in the result record for second mesh node</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.Line2MappingItem" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.Equals(BuildSoft.UBSM.Analysis.Results.Line2MappingItem)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line2MappingItem.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.Line3MappingItem">
            <summary>Used for mapping quadratic line results</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.SourceID">
            <summary>ID of the quadratic mesh line</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.RecordIndex1">
            <summary>Index in the result record for first mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.RecordIndex2">
            <summary>Index in the result record for second mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.RecordIndex12">
            <summary>Index in the result record for the intermediate mesh node</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.Line3MappingItem" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.Equals(BuildSoft.UBSM.Analysis.Results.Line3MappingItem)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Line3MappingItem.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem">
            <summary>Used for mapping triangle results</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.SourceID">
            <summary>ID of the mesh triangle</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.RecordIndex1">
            <summary>Index in the result record for first mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.RecordIndex2">
            <summary>Index in the result record for second mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.RecordIndex3">
            <summary>Index in the result record for third mesh node</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.Equals(BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle3MappingItem.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem">
            <summary>Used for mapping quadratic triangle results</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.SourceID">
            <summary>ID of the quadratic mesh triangle</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.RecordIndex1">
            <summary>Index in the result record for first mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.RecordIndex2">
            <summary>Index in the result record for second mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.RecordIndex3">
            <summary>Index in the result record for third mesh node</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.RecordIndex12">
            <summary>Index in the result record for intermediate mesh node between first and second mesh nodes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.RecordIndex23">
            <summary>Index in the result record for intermediate mesh node between second and third mesh nodes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.RecordIndex31">
            <summary>Index in the result record for intermediate mesh node between third and first mesh nodes</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.Equals(BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Triangle6MappingItem.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.MeshMap">
            <summary>Mapping between a mesh and its result records</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.MeshMap.NodeMap">
            <summary>Node map</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.MeshMap.Line2Map">
            <summary>Line map</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.MeshMap.Line3Map">
            <summary>Quadratic line map</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.MeshMap.Triangle3Map">
            <summary>Triangle map</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.MeshMap.Triangle6Map">
            <summary>Quadratic triangle map</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.MeshMap.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.MeshMap" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.MeshMap.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.MeshMap.Equals(BuildSoft.UBSM.Analysis.Results.MeshMap)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.MeshMap.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.MeshMap.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.MeshMap.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.Table">
            <summary> Results table. This does not contain actual results data, but a relative path to where the actual results data table is stored. The actual table should just be a binary file containing floating point values (single precision). This allows for a smaller model size when the results are included. They will only be transferred in case of a remote exchange as attachments. </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Table.OutputType">
            <summary>Output type of the table</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Table.Name">
            <summary>Localizable name of the table</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.Table.RelativePath">
            <summary>Location of the table relative to the UBSM model's source path</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Table.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.Table" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Table.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Table.Equals(BuildSoft.UBSM.Analysis.Results.Table)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Table.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Table.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.Table.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Results.TableGroup">
            <summary>Group of tables corresponding to a single result group, when complete only one table is provided, an envelope would provide 2, otherwise any given number is possible</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.TableGroup.ResultGroup">
            <summary>The result group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Results.TableGroup.Tables">
            <summary>Corresponding tables</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.TableGroup.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Results.TableGroup" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.TableGroup.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.TableGroup.Equals(BuildSoft.UBSM.Analysis.Results.TableGroup)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.TableGroup.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.TableGroup.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Results.TableGroup.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.NamespaceDoc">
            <summary>Exchange library for analytical models</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Fire.NamespaceDoc">
            <summary>Exchange library for describing the settings for the fire analysis of the analytical model</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Fire.FireProtectionType">
            <summary>Provides a set of possible types of protections that can be applied</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireProtectionType.TopPlate">
            <summary>Protected by a plate on top</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireProtectionType.EmbeddedTopWeb">
            <summary>Top flange and web are embedded into a plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireProtectionType.Coated">
            <summary>Coated on all sides</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireProtectionType.TopPlateCoated">
            <summary>Protected by a plate on top, rest is coated</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireProtectionType.EmbeddedTopWebCoated">
            <summary>Top flange and web are embedded into a plate, bottom flange is coated</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireProtectionType.Boxed">
            <summary>Protected by a box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireProtectionType.TopPlateBoxed">
            <summary>Protected by a plate on top, rest is protected by a box</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Fire.FireExposureCurveType">
            <summary>Provides a set of possible fire exposure curves</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireExposureCurveType.ISO834">
            <summary>Define a curve according to ISO834</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireExposureCurveType.External">
            <summary>Define an external fire curve</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireExposureCurveType.Hydrocarbon">
            <summary>Define a hydrocarbon fire curve</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireExposureCurveType.Custom">
            <summary>Define a custom curve by a function</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Fire.Settings">
            <summary>Contains all settings used to carry out the fire analysis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.Settings.PredefinedFireConfigurations">
            <summary>Predefined fire configurations</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.Settings.CustomFireConfigurations">
            <summary>Custom fire configurations</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.Settings.BarFireInformations">
            <summary>Provides information about the fire boundary conditions attached to individual bars</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.Settings.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Fire.Settings" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.Settings.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.Settings.Equals(BuildSoft.UBSM.Analysis.Fire.Settings)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.Settings.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.Settings.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.Settings.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration">
            <summary>Describe the parameters of a predefined protection type</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.ID">
            <summary>Configuration ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.ProtectionType">
            <summary>Provides a set of possible values to describe the protection used</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.Thickness">
            <summary>Thickness of the protecting coating/box [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.MaterialID">
            <summary>Material ID used as a coating/box</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.Equals(BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.HasEqualContent(BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.Fire.PredefinedFireConfiguration)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Fire.FireExposureZone">
            <summary>Defines a zone exposed to fire</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.FireExposureZone.Vertices">
            <summary>Defines a region where fire is active</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.FireExposureZone.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Fire.FireExposureZone" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.FireExposureZone.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.FireExposureZone.Equals(BuildSoft.UBSM.Analysis.Fire.FireExposureZone)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.FireExposureZone.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.FireExposureZone.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.FireExposureZone.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration">
            <summary>Describe a custom fire protection configuration</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.ID">
            <summary>Configuration ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.FireExposureZones">
            <summary>Zones where fire is acting</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.AdiabaticLines">
            <summary>Lines that do not allow heat transfer</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.CustomFireSection">
            <summary>ID of the custom section with thermal coating</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.Equals(BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.CustomFireConfiguration.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Fire.BarFireInfo">
            <summary>Describes a fire configuration</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.BarID">
            <summary>ID of the corresponding analysis bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.FireExposureCurve">
            <summary>Type of the fire exposure curve</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.CustomFireCurveID">
            <summary>ID of the corresponding function in case the curve is custom type</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.FireExposureTime">
            <summary>Required fire resistance time for the analysis bar [s]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.ConfigurationID">
            <summary>ID of the custom or predefined protection</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Fire.BarFireInfo" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.Equals(BuildSoft.UBSM.Analysis.Fire.BarFireInfo)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Fire.BarFireInfo.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.Model">
            <summary> Contains all the necessary information to describe an analytical model, like bars, plates, loads and results. </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.Name">
            <summary>Localizable name of the model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.ID">
            <summary>Unique identifier for the analysis model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.Functions">
            <summary>A list of all functions</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.SoilProfiles">
            <summary>A list of all soil profiles</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.MaterialProperties">
            <summary>A list of all material properties</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.SectionProperties">
            <summary>A list of all section properties</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.Points">
            <summary>A list of all analytical points</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.Bars">
            <summary>A list of all analytical bars</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.Plates">
            <summary>A list of all analytical plates</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.BarGroups">
            <summary>A list of all bar groups</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.PlateGroups">
            <summary>A list of all plate groups</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.Loads">
            <summary>Describes load cases and combinations used for the analysis of the structure</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.GeometryMeshes">
            <summary>A list of all geometrical meshes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.SectionMeshes">
            <summary>A list of all section meshes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.Results">
            <summary>A list of all results set</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.ConnectionsVerification">
            <summary>A list of connections verification</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.MeshSettings">
            <summary>Settings for the meshing of the analysis model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.AnalysisSettings">
            <summary>Settings for analysis of the analysis model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.Model.FireSettings">
            <summary>Settings for the fire analysis of the analysis model</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.Model" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.Equals(BuildSoft.UBSM.Analysis.Model)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.HasEqualContent(BuildSoft.UBSM.Analysis.Model)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.Model.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.Model)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.SectionProperties">
            <summary>Set of properties for a section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionProperties.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionProperties.SectionID">
            <summary>The section ID for which these properties apply</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.SectionProperties.PropertyGroups">
            <summary>List of section properties divided by Standard</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.SectionProperties" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.Equals(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.HasEqualContent(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.SectionProperties.HasEqualCriticalContent(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Analysis.ElementSettings">
            <summary>Analysis settings</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.ElementSettings.ReferenceID">
            <summary>ID of the element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Analysis.ElementSettings.Values">
            <summary>Optional settings. Key-Value pairs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.ElementSettings.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Analysis.ElementSettings" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.ElementSettings.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.ElementSettings.Equals(BuildSoft.UBSM.Analysis.ElementSettings)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.ElementSettings.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.ElementSettings.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Analysis.ElementSettings.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.CheckEqualContentAttribute">
            <summary>
            Adorns classes that can check for equal content
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.IsNotContentAttribute">
            <summary>
            Adorns fields that are not considered during a content check
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.IsNotCriticalContentAttribute">
            <summary>
            Adorns fields that are not considered during a critical content check
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.IgnoreOrderForContentAttribute">
            <summary>
            Adorns fields that will not take the order of a collection into account while comparing
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.IsForDatabaseAttribute">
            <summary>
            Adorns fields that are not considered during a content check
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.IgnoreInDatabaseAttribute">
            <summary>
            Adorns fields / properties that should be ignored for the database
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Structure">
            <summary> <para>Defines the whole structure of the UBSM (Unified BuildSoft Model). It contains the physical and analysis data.</para> <para>The model is used to transfer information among different applications as it can be sent to the Import/Export Service.</para> </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Structure.Name">
            <summary>Localizable name of the structure</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Structure.ID">
            <summary>Unique identifier for the structure</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Structure.PhysicalModel">
            <summary>The physical model of the structure</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Structure.AnalysisModels">
            <summary>A list of analysis models of the structure</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Structure.Visualisation">
            <summary>A set of visualisation options</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Structure" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.Equals(BuildSoft.UBSM.Structure)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.HasEqualContent(BuildSoft.UBSM.Structure)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Structure.HasEqualCriticalContent(BuildSoft.UBSM.Structure)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.General.KeyStringValue">
            <summary> Key-value pair where the value is a <see cref="T:System.String" /> type </summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyStringValue.Key">
            <summary>Key to describe the pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyStringValue.Value">
            <summary>Value of the pair</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyStringValue.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.General.KeyStringValue" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyStringValue.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyStringValue.Equals(BuildSoft.UBSM.General.KeyStringValue)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyStringValue.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyStringValue.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyStringValue.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.General.KeyDoubleValue">
            <summary> Key-value pair where the value is a <see cref="T:System.Double" /> type </summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyDoubleValue.Key">
            <summary>Key to describe the pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyDoubleValue.Value">
            <summary>Value of the pair</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyDoubleValue.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.General.KeyDoubleValue" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyDoubleValue.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyDoubleValue.Equals(BuildSoft.UBSM.General.KeyDoubleValue)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyDoubleValue.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyDoubleValue.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyDoubleValue.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.General.KeyBoolValue">
            <summary> Key-value pair where the value is a <see cref="T:System.Boolean" /> type </summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyBoolValue.Key">
            <summary>Key to describe the pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyBoolValue.Value">
            <summary>Value of the pair</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyBoolValue.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.General.KeyBoolValue" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyBoolValue.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyBoolValue.Equals(BuildSoft.UBSM.General.KeyBoolValue)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyBoolValue.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyBoolValue.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyBoolValue.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.General.AliasedString">
            <summary>Allows the naming of items thorough the storage of a default value and a list of aliased values</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.ToString">
            <summary>
            Conver the AliasedString object to a string
            </summary>
            <returns>The aliased value using the two letter ISO language name of the current UI culture if possible. Otherwise it will return the default text.</returns>
        </member>
        <member name="F:BuildSoft.UBSM.General.AliasedString.Default">
            <summary>Fallback value</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.AliasedString.Aliases">
            <summary>A list of provided aliases</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.General.AliasedString" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.Equals(BuildSoft.UBSM.General.AliasedString)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.HasEqualContent(BuildSoft.UBSM.General.AliasedString)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.AliasedString.HasEqualCriticalContent(BuildSoft.UBSM.General.AliasedString)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.General.NamespaceDoc">
            <summary>Exchange library that contains general items used by BuildSoft model</summary>
        </member>
        <member name="T:BuildSoft.UBSM.General.DatabaseStatus">
            <summary>Defines a set of possible status of an item in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.DatabaseStatus.Visible">
            <summary>The item should appear in the list of possible database items</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.DatabaseStatus.Invisible">
            <summary>The item should not appear in the list of possible database items</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.DatabaseStatus.Removed">
            <summary>The item should not be loaded from the database. It is no longer used</summary>
        </member>
        <member name="T:BuildSoft.UBSM.General.Standards">
            <summary>Provides a set of predefined standards</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NotSpecified">
            <summary>Specifies that no standards was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_B15_002">
            <summary>Specifies that old Belgian concrete standard was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_6720">
            <summary>Specifies that the "Dutch concrete standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_1045">
            <summary>Specifies that the "old German concrete standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_1045E">
            <summary>Specifies that the "new German concrete standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BAEL91">
            <summary>Specifies that the "French concrete standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_8110">
            <summary>Specifies that the "British concrete standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EHE99">
            <summary>Specifies that the "Spanish concrete standard (1990)" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EHE08">
            <summary>Specifies that the "Spanish concrete standard (2008)" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.ACI318">
            <summary>Specifies that the "American concrete standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.IS456">
            <summary>Specifies that the "Indian concrete standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.AISC">
            <summary>Specifies that the "American steel standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.IS1225">
            <summary>Specifies that the "Israelian steel standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.IS800">
            <summary>Specifies that the "Indian steel standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EAE">
            <summary>Specifies that the "Spanish steel standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NSR10">
            <summary>Specifies that the "Colombian seismic standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.CTE">
            <summary>Specifies that the "Spanish Código Técnico de la Edificación general standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN40">
            <summary>Specifies that the Belgian "Eurocode - lighting columns" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_6702">
            <summary>Specifies that the Dutch load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_8700">
            <summary>Specifies that the Dutch load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.ASCE_7_10">
            <summary>Specifies that the American load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.ASCE_7_10_LRFD">
            <summary>Specifies that the American load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.INPRES_CIRSOC_103">
            <summary>Specifies that the Argentinian load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NCh_433">
            <summary>Specifies that the Chilean load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NCSE02">
            <summary>Specifies that the Spanish load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SI_412">
            <summary>Specifies that the Israeli load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SI_413">
            <summary>Specifies that the Israeli load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SI_414">
            <summary>Specifies that the Israeli wind standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SE_AE">
            <summary>Specifies that the Spanish wind load standard was chosen.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1990">
            <summary>Specifies that the general "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1990">
            <summary>Specifies that the British "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1990">
            <summary>Specifies that the German "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1990">
            <summary>Specifies that the Belgian "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1990">
            <summary>Specifies that the Dutch "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1990">
            <summary>Specifies that the French "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LU_EN1990">
            <summary>Specifies that the Luxembourg "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1990">
            <summary>Specifies that the Spanish "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1990">
            <summary>Specifies that the Norwegian "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1990">
            <summary>Specifies that the Polish "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.ENV1991">
            <summary>Prestandard Eurocode 1</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1991">
            <summary>Specifies that the general "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1991">
            <summary>Specifies that the British "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1991">
            <summary>Specifies that the German "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1991">
            <summary>Specifies that the Belgian "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1991">
            <summary>Specifies that the Dutch "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1991">
            <summary>Specifies that the French "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LU_EN1991">
            <summary>Specifies that the Luxembourg "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1991">
            <summary>Specifies that the Spanish "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1991">
            <summary>Specifies that the Norwegian "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1991">
            <summary>Specifies that the Polish "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1992">
            <summary>Specifies that the general "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1992">
            <summary>Specifies that the British "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1992">
            <summary>Specifies that the German "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1992">
            <summary>Specifies that the Belgian "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1992">
            <summary>Specifies that the Dutch "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1992">
            <summary>Specifies that the French "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1992">
            <summary>Specifies that the Spanish "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LU_EN1992">
            <summary>Specifies that the Luxembourg "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1992">
            <summary>Specifies that the Norwegian "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1992">
            <summary>Specifies that the Polish "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.ENV1992">
            <summary>Specifies that the general "Eurocode 2 - concrete pre-standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_ENV1992">
            <summary>Specifies that the Dutch "Eurocode 2 - concrete pre-standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.RakMK_B4">
            <summary>Specifies that the Finnish concrete standard was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1993">
            <summary>Specifies that the general "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1993">
            <summary>Specifies that the British "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1993">
            <summary>Specifies that the German "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1993">
            <summary>Specifies that the Belgian "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN6770_NEN6771">
            <summary>Specifies that the old Dutch "national standard - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1993">
            <summary>Specifies that the Dutch "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LU_EN1993">
            <summary>Specifies that the Luxembourg "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1993">
            <summary>Specifies that the French "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1993">
            <summary>Specifies that the Spanish "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1993">
            <summary>Specifies that the Norwegian "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1993">
            <summary>Specifies that the Polish "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.ENV1993">
            <summary>Specifies that the general "Eurocode 3 - steel pre-standard" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1994">
            <summary>Specifies that the general "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1994">
            <summary>Specifies that the British "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1994">
            <summary>Specifies that the German "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1994">
            <summary>Specifies that the Belgian "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1994">
            <summary>Specifies that the Dutch "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1994">
            <summary>Specifies that the French "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1994">
            <summary>Specifies that the Spanish "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1994">
            <summary>Specifies that the Norwegian "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1994">
            <summary>Specifies that the Polish "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1995">
            <summary>Specifies that the general "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1995">
            <summary>Specifies that the British "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1995">
            <summary>Specifies that the German "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1995">
            <summary>Specifies that the Belgian "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1995">
            <summary>Specifies that the Dutch "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1995">
            <summary>Specifies that the French "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1995">
            <summary>Specifies that the Spanish "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1995">
            <summary>Specifies that the Norwegian "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1995">
            <summary>Specifies that the Polish "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1996">
            <summary>Specifies that the general "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1996">
            <summary>Specifies that the British "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1996">
            <summary>Specifies that the German "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1996">
            <summary>Specifies that the Belgian "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1996">
            <summary>Specifies that the Dutch "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1996">
            <summary>Specifies that the French "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1996">
            <summary>Specifies that the Spanish "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1996">
            <summary>Specifies that the Norwegian "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1996">
            <summary>Specifies that the Polish "Eurocode 6 - masonry" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1997">
            <summary>Specifies that the general "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1997">
            <summary>Specifies that the British "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1997">
            <summary>Specifies that the German "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1997">
            <summary>Specifies that the Belgian "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1997">
            <summary>Specifies that the Dutch "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1997">
            <summary>Specifies that the French "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1997">
            <summary>Specifies that the Spanish "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1997">
            <summary>Specifies that the Norwegian "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1997">
            <summary>Specifies that the Polish "Eurocode 7 - geotechnical" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1998">
            <summary>Specifies that the general "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1998">
            <summary>Specifies that the British "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1998">
            <summary>Specifies that the German "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1998">
            <summary>Specifies that the Belgian "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1998">
            <summary>Specifies that the Dutch "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1998">
            <summary>Specifies that the French "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1998">
            <summary>Specifies that the Spanish "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1998">
            <summary>Specifies that the Norwegian "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1998">
            <summary>Specifies that the Polish "Eurocode 8 - earthquake" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.EN1999">
            <summary>Specifies that the general "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_EN1999">
            <summary>Specifies that the British "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DIN_EN1999">
            <summary>Specifies that the German "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NBN_EN1999">
            <summary>Specifies that the Belgian "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NEN_EN1999">
            <summary>Specifies that the Dutch "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NF_EN1999">
            <summary>Specifies that the French "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.UNE_EN1999">
            <summary>Specifies that the Spanish "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.NS_EN1999">
            <summary>Specifies that the Norwegian "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.PN_EN1999">
            <summary>Specifies that the Polish "Eurocode 9 - aluminium" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.CM66">
            <summary>Specifies that the French old standard - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.CM66_80">
            <summary>Specifies that the French old standard - steel additif 80" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SIA_260">
            <summary>Specifies that the Swiss standard "Basis of structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SIA_262">
            <summary>Specifies that the Swiss concrete standard was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SIA_263">
            <summary>Specifies that the Swiss steel standard was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SIA_265">
            <summary>Specifies that the Swiss timber standard was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.BS_5950">
            <summary>Specifies that the Old British steel standard was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LT_EN1990">
            <summary>Specifies that the Lithuanian "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LT_EN1991">
            <summary>Specifies that the Lithuanian "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LT_EN1992">
            <summary>Specifies that the Lithuanian "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LT_EN1993">
            <summary>Specifies that the Lithuanian "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LT_EN1994">
            <summary>Specifies that the Lithuanian "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.LT_EN1995">
            <summary>Specifies that the Lithuanian "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DK_EN1990">
            <summary>Specifies that the Danish "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DK_EN1991">
            <summary>Specifies that the Danish "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DK_EN1992">
            <summary>Specifies that the Danish "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DK_EN1993">
            <summary>Specifies that the Danish "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DK_EN1994">
            <summary>Specifies that the Danish "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.DK_EN1995">
            <summary>Specifies that the Swedish "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SE_EN1990">
            <summary>Specifies that the Swedish "Eurocode 0 - structural design" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SE_EN1991">
            <summary>Specifies that the Swedish "Eurocode 1 - actions" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SE_EN1992">
            <summary>Specifies that the Swedish "Eurocode 2 - concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SE_EN1993">
            <summary>Specifies that the Swedish "Eurocode 3 - steel" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SE_EN1994">
            <summary>Specifies that the Swedish "Eurocode 4 - composite steel and concrete" was chosen</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Standards.SE_EN1995">
            <summary>Specifies that the Swedish "Eurocode 5 - timber" was chosen</summary>
        </member>
        <member name="T:BuildSoft.UBSM.General.Quantity">
            <summary>An enumeration of all default quantities as used in the UBSM</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.Scalar">
            <summary>Not dimensional [-]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.Length">
            <summary>Length [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.PlaneAngle">
            <summary>Plane angle [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.Force">
            <summary>Force [N]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.ForceOnLine">
            <summary>Force per unit length [N/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.ForceOnPlane">
            <summary>Force per unit of area [N/m²]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.Moment">
            <summary>Moment of force [Nm]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.MomentOnLine">
            <summary>Moment of force per unit length [Nm/m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.Time">
            <summary>Time interval [s]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Quantity.Temperature">
            <summary>Temperature [K]</summary>
        </member>
        <member name="T:BuildSoft.UBSM.General.KeyIntegerValue">
            <summary> Key-value pair where the value is a <see cref="T:System.Int32" /> type </summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyIntegerValue.Key">
            <summary>Key to describe the pair</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyIntegerValue.Value">
            <summary>Value of the pair</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyIntegerValue.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.General.KeyIntegerValue" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyIntegerValue.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyIntegerValue.Equals(BuildSoft.UBSM.General.KeyIntegerValue)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyIntegerValue.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyIntegerValue.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyIntegerValue.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.General.GuidMapItem">
            <summary> Mapping item to replace a <see cref="T:System.Guid" /> ID element by another one, most commonly used to change the materials of a database section in an element </summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.GuidMapItem.BaseID">
            <summary>ID of the original item</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.GuidMapItem.ReplacedWith">
            <summary>ID of the item that should replace the original item</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.GuidMapItem.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.General.GuidMapItem" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.GuidMapItem.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.GuidMapItem.Equals(BuildSoft.UBSM.General.GuidMapItem)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.GuidMapItem.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.GuidMapItem.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.GuidMapItem.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.General.KeyValues">
            <summary>Wrapper object to create a dictionary of custom settings</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyValues.DoubleValues">
            <summary>Floating point values</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyValues.IntegerValues">
            <summary>Integer values</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyValues.StringValues">
            <summary>Text values</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.KeyValues.BoolValues">
            <summary>True/false values</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyValues.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.General.KeyValues" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyValues.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyValues.Equals(BuildSoft.UBSM.General.KeyValues)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyValues.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyValues.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.KeyValues.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.General.Tag">
            <summary>Tags to be assigned to different regions</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Tag.ID">
            <summary>A unique identifier that can tell clients what the role of a part is</summary>
        </member>
        <member name="F:BuildSoft.UBSM.General.Tag.Name">
            <summary>Localizable name of the tag</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.General.Tag" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.Equals(BuildSoft.UBSM.General.Tag)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.HasEqualContent(BuildSoft.UBSM.General.Tag)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.General.Tag.HasEqualCriticalContent(BuildSoft.UBSM.General.Tag)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.NamespaceDoc">
            <summary>Exchange library for BuildSoft models</summary>
            <remarks>The units used in the definition of the model are according to the International System of Units (m, N, s, K, kg)</remarks>
        </member>
        <member name="T:BuildSoft.UBSM.Math.NamespaceDoc">
            <summary>Exchange library for mathematical and geometrical basic elements</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Math.CoordinateSystemType">
            <summary>Provides a set of possible types of coordinate systems</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.CoordinateSystemType.Cartesian">
            <summary>Cartesian coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.CoordinateSystemType.Polar">
            <summary>Polar coordinate system</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Math.Interpolation">
            <summary>Possibilities to interpolate between point data</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Interpolation.Unknown">
            <summary>It is not known how to interpolate values</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Interpolation.Discrete">
            <summary>The function is only defined in the specified points</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Interpolation.Stepped">
            <summary>The function is horizontally extended to the right until the next abscis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Interpolation.Linear">
            <summary>Connect the dots</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Interpolation.Polynomial">
            <summary>Create a polynomial of n-1 degree that goes through n points</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Interpolation.Spline">
            <summary>Generate a spline</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Math.Vector2">
            <summary>2D vector</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Vector2.X">
            <summary>X value</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Vector2.Y">
            <summary>Y value</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector2.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.Vector2" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector2.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector2.Equals(BuildSoft.UBSM.Math.Vector2)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector2.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector2.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector2.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Math.Vector3">
            <summary>3D vector</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Vector3.X">
            <summary>X value</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Vector3.Y">
            <summary>Y value</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Vector3.Z">
            <summary>Z value</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector3.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.Vector3" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector3.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector3.Equals(BuildSoft.UBSM.Math.Vector3)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector3.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector3.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Vector3.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="P:BuildSoft.UBSM.Math.Vector3.Item(System.Int32)">
            <summary>
            Select the coordinates with their zero-based index
            </summary>
            <param name="index">zero-based [0..2]</param>
            <returns>The values of X, Y or Z respectively</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Math.CoordinateSystem">
            <summary>Define a coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.CoordinateSystem.X">
            <summary>Unitary vector that defines the local X-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.CoordinateSystem.Y">
            <summary>Unitary vector that defines the local Y-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.CoordinateSystem.Z">
            <summary>Unitary vector that defines the local Z-axis</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.CoordinateSystem.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.CoordinateSystem" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.CoordinateSystem.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.CoordinateSystem.Equals(BuildSoft.UBSM.Math.CoordinateSystem)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.CoordinateSystem.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.CoordinateSystem.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.CoordinateSystem.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Math.Matrix2x2">
            <summary>2 by 2 dense matrix</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix2x2.Cell11">
            <summary>The value at column 1 and row 1</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix2x2.Cell12">
            <summary>The value at column 1 and row 2</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix2x2.Cell21">
            <summary>The value at column 2 and row 1</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix2x2.Cell22">
            <summary>The value at column 2 and row 2</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix2x2.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.Matrix2x2" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix2x2.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix2x2.Equals(BuildSoft.UBSM.Math.Matrix2x2)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix2x2.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix2x2.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix2x2.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Math.Matrix3x3">
            <summary>3 by 3 dense matrix</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell11">
            <summary>The value at column 1 and row 1</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell12">
            <summary>The value at column 1 and row 2</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell13">
            <summary>The value at column 1 and row 3</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell21">
            <summary>The value at column 2 and row 1</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell22">
            <summary>The value at column 2 and row 2</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell23">
            <summary>The value at column 2 and row 3</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell31">
            <summary>The value at column 3 and row 1</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell32">
            <summary>The value at column 3 and row 2</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Matrix3x3.Cell33">
            <summary>The value at column 3 and row 3</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix3x3.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.Matrix3x3" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix3x3.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix3x3.Equals(BuildSoft.UBSM.Math.Matrix3x3)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix3x3.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix3x3.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Matrix3x3.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Math.Triangle2D">
            <summary>Triangle in the 2 dimensional space</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Triangle2D.P1">
            <summary>First point's location</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Triangle2D.P2">
            <summary>Second point's location</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Triangle2D.P3">
            <summary>Third point's location</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle2D.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.Triangle2D" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle2D.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle2D.Equals(BuildSoft.UBSM.Math.Triangle2D)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle2D.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle2D.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle2D.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Math.Triangle3D">
            <summary>Triangle in the 3 dimensional space</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Triangle3D.P1">
            <summary>First point's location</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Triangle3D.P2">
            <summary>Second point's location</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.Triangle3D.P3">
            <summary>Third point's location</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle3D.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.Triangle3D" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle3D.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle3D.Equals(BuildSoft.UBSM.Math.Triangle3D)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle3D.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle3D.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.Triangle3D.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Math.MultiLinear">
            <summary> Ordered sequence of 2D points </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.MultiLinear.Name">
            <summary>Localizable name of the function</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.MultiLinear.DataPoints">
            <summary>List with (x,y)-values</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.MultiLinear" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.Equals(BuildSoft.UBSM.Math.MultiLinear)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.HasEqualContent(BuildSoft.UBSM.Math.MultiLinear)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.MultiLinear.HasEqualCriticalContent(BuildSoft.UBSM.Math.MultiLinear)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Math.BezierCurve2D">
            <summary>2 dimensional Bezier Curve</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.BezierCurve2D.BeginPoint">
            <summary>Starting point's location</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.BezierCurve2D.BeginControlPoint">
            <summary>First control point's location, place in between start and end for a straight line</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.BezierCurve2D.EndControlPoint">
            <summary>Second control point's location, place in between start and end for a straight line</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Math.BezierCurve2D.EndPoint">
            <summary>End point's location</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.BezierCurve2D.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Math.BezierCurve2D" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Math.BezierCurve2D.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.BezierCurve2D.Equals(BuildSoft.UBSM.Math.BezierCurve2D)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.BezierCurve2D.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.BezierCurve2D.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Math.BezierCurve2D.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.NamespaceDoc">
            <summary>Exchange library for the physical model</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.NamespaceDoc">
            <summary>Exchange library for the elements that define a physical model</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint">
            <summary> <para>Provides a set of possible values to describe the spatial relation between the cross-section of a bar and its reference axis.</para> <para>Values 0 to 9 refer to points at the bounding box of the cross-section and values 10 to 10 refer to points defined by geometric centroid and shear centre, and their combinations with bounding box coordinates.</para> </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.BottomLeft">
            <summary>The bottom left of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.BottomCentre">
            <summary>The bottom centre of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.BottomRight">
            <summary>The bottom right of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.MidDepthLeft">
            <summary>The mid-depth left of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.MidDepthCentre">
            <summary>The mid-depth centre of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.MidDepthRight">
            <summary>The mid-depth right of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.TopLeft">
            <summary>The top left of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.TopCentre">
            <summary>The top centre of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.TopRight">
            <summary>The top right of the bounding box</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.GeometricCentroid">
            <summary>The geometric centroid (usually the centre of gravity) of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.BottomInLineGC">
            <summary>The bottom in line with the geometric centroid of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.LeftInLineGC">
            <summary>The left in line with the geometric centroid of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.RightInLineGC">
            <summary>The right in line with the geometric centroid of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.TopInLineGC">
            <summary>The top in line with the geometric centroid of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.ShearCentre">
            <summary>The shear centre of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.BottomInLineSC">
            <summary>The bottom in line with the shear centre of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.LeftInLineSC">
            <summary>The left in line with the shear centre of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.RightInLineSC">
            <summary>The right in line with the shear centre of the cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarCardinalPoint.TopInLineSC">
            <summary>The top in line with the shear centre of the cross-section</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PlateAnchorPlane">
            <summary>Provides a set of possible values to describe the relation between the cross-section of a plate and its reference plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PlateAnchorPlane.BottomPlane">
            <summary>The bottom plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PlateAnchorPlane.MidDepthPlane">
            <summary>The mid-depth plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PlateAnchorPlane.TopPlane">
            <summary>The top plane</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PadFootingType">
            <summary>Provides a set of possible values to describe different types of pad footings</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFootingType.Simple">
            <summary>The simple and typical pad footing formed by an extruded cross-section (rectangular, circular, etc.)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFootingType.Stepped">
            <summary>The stepped type</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFootingType.Sloped">
            <summary>The sloped type</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.BarDirectrixType">
            <summary>Provides a set of possible types of bar directrix</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarDirectrixType.Straight">
            <summary>The bar is a straight line</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarDirectrixType.CircularCurvedXY">
            <summary>The bar describes a circular arc in the XY-local plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarDirectrixType.CircularCurvedXZ">
            <summary>The bar describes a circular arc in the XZ-local plane</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.ChamferType">
            <summary>Provides a set of possible types of chamfers</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.ChamferType.None">
            <summary>No chamfer type</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.ChamferType.Line">
            <summary>Line type (e.g. bevel) in which two dimensions are required</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.ChamferType.Rounding">
            <summary>Rounding type in wich he only one dimension required is the rounding radius</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PlaneModifierType">
            <summary>Provides a set of plane modifier types</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PlaneModifierType.PlaneCut">
            <summary>Plane cut: the local XZ-plane defines the cutting plane, the local Y-direction is perpendicular to the cut and defines the side of the part to be cut off</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PlaneModifierType.PlaneFitting">
            <summary>Plane fitting: the local XZ-plane defines the fitting plane, the fitting is applied on the side nearest to the midpoint of the bar</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.HoleType">
            <summary>Provides a set of possible types of holes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleType.NormalHole">
            <summary>Normal hole (cylindrical)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleType.CountersunkHole">
            <summary>Countersunk hole</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleType.SlottedHole">
            <summary>Slotted hole</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleType.ThreadedHole">
            <summary>Threaded hole</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleType.AnchorHole">
            <summary>Hole for anchorage purpose</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.Eccentricity">
            <summary>Describes an eccentricity by the contribution of a global offset and a local offset</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Eccentricity.GlobalOffset">
            <summary>The offset referred to the global coordinate system [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Eccentricity.LocalOffset">
            <summary>The offset referred to the local coordinate system [m]</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Eccentricity.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.Eccentricity" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Eccentricity.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Eccentricity.Equals(BuildSoft.UBSM.Physical.Geometry.Eccentricity)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Eccentricity.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Eccentricity.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Eccentricity.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.BarPosition">
            <summary>Describes a bar position</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarPosition.Location">
            <summary>The location of the bar end [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarPosition.Eccentricity">
            <summary>Eccentricity at the bar end</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarPosition.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.BarPosition" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarPosition.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarPosition.Equals(BuildSoft.UBSM.Physical.Geometry.BarPosition)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarPosition.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarPosition.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarPosition.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.Chamfer">
            <summary>Describes a chamfer</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Chamfer.ChamferType">
            <summary>The type of chamfer</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Chamfer.MainDimension">
            <summary>The main dimension [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Chamfer.SecondaryDimension">
            <summary> The secondary dimension for <see cref="F:BuildSoft.UBSM.Physical.Geometry.ChamferType.Line" /> type [m] </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Chamfer.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.Chamfer" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Chamfer.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Chamfer.Equals(BuildSoft.UBSM.Physical.Geometry.Chamfer)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Chamfer.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Chamfer.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Chamfer.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PolylineVertex">
            <summary>Describes a inner vertex of a polyline</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.Location">
            <summary>The location of the vertex [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.GlobalOffset">
            <summary>The offset referred to the global coordinate system [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.Chamfer">
            <summary>The chamfer at the vertex</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.PolylineVertex" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.Equals(BuildSoft.UBSM.Physical.Geometry.PolylineVertex)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolylineVertex.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PolygonVertex">
            <summary>Describes a vertex of a polygon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolygonVertex.Location">
            <summary>The location of the vertex [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolygonVertex.Chamfer">
            <summary>The chamfer at the vertex</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolygonVertex.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.PolygonVertex" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolygonVertex.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolygonVertex.Equals(BuildSoft.UBSM.Physical.Geometry.PolygonVertex)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolygonVertex.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolygonVertex.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolygonVertex.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.BarDirectrix">
            <summary>Describes the directrix of a bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarDirectrix.DirectrixType">
            <summary>Type of directrix</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.BarDirectrix.RadiusOfCurvature">
            <summary>Radius of curvature for circular curved types. Positive if the vector who goes from the center to the arc midpoint has positive projection over the corresponding axis</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarDirectrix.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.BarDirectrix" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarDirectrix.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarDirectrix.Equals(BuildSoft.UBSM.Physical.Geometry.BarDirectrix)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarDirectrix.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarDirectrix.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.BarDirectrix.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.Bar">
            <summary>Describes a single bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.ID">
            <summary>Bar ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.Name">
            <summary>Localizable name of the bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.Begin">
            <summary>Definition of the bar's beginning</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.End">
            <summary>Definition of the bar's end</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.CardinalPoint">
            <summary>Cardinal point referred to the reference line which is defined from start point's location to end point's location</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.Directrix">
            <summary>Type of directrix of the bar (straight or curved)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.LocalCS">
            <summary>Local coordinate system (right-handed)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.SectionID">
            <summary>Bar's section ID (parametric, custom or variable section)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.MaterialOverrides">
            <summary>Defines a list of materials to replace in the section definition for this bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.SectionMirroredAroundZAxis">
            <summary>Indicates that the provided section should be mirrored around the z-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.Modifiers">
            <summary>List of part modifiers</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Bar.AdditionalParameters">
            <summary>Optional additional parameters</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Bar.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.Bar" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Bar.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Bar.Equals(BuildSoft.UBSM.Physical.Geometry.Bar)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Bar.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Bar.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Bar.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PolyBar">
            <summary>Describes a bar formed by a chain of straight segments</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.ID">
            <summary>Bar ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.Name">
            <summary>Localizable name of the bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.Begin">
            <summary>Definition of the bar's beginning</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.End">
            <summary>Definition of the bar's end</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.CardinalPoint">
            <summary>Cardinal point referred to the reference line which is defined among locations</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.InnerVertices">
            <summary>The inner vertices. Count = Numer of segments - 2</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.LocalCSs">
            <summary>Local coordinate systems (right-handed) of all segments. This set is ordered according to the segments' definition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.SectionID">
            <summary>Bar's section ID (parametric, custom or variable section)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.SectionMirroredAroundZAxis">
            <summary>Indicates that the provided section should be mirrored around the z-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.MaterialOverrides">
            <summary>Defines a list of materials to replace in the section definition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.Modifiers">
            <summary>List of part modifiers</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PolyBar.AdditionalParameters">
            <summary>Optional additional parameters</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolyBar.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.PolyBar" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolyBar.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolyBar.Equals(BuildSoft.UBSM.Physical.Geometry.PolyBar)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolyBar.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolyBar.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PolyBar.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.Polygon">
            <summary>Describes a 2D polygon which can be a circle or a free polygon without crossed segments</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Polygon.IsCircle">
            <summary>True if the polygon is a is circle</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Polygon.CircleCentre">
            <summary>The centre of the circle</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Polygon.CircleDiameter">
            <summary>The diameter of the circle</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Polygon.Vertices">
            <summary>List of vertices defining the polygon, which can be described in clockwise or counterclockwise order indistinctly. To be used when the polygon is not a circle</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Polygon.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.Polygon" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Polygon.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Polygon.Equals(BuildSoft.UBSM.Physical.Geometry.Polygon)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Polygon.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Polygon.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Polygon.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.Plate">
            <summary>Describes a plate with flat surface</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.ID">
            <summary>Plate ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.Name">
            <summary>Localizable name of the plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.OuterPolygon">
            <summary>The polygon that defines geometrically the surface of the plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.BoundingBoxAnchorPlane">
            <summary>The anchor plane of the bounding box of the plate section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.BoundingBoxOffsetY">
            <summary>Signed offset of the bounding box of the plate section, measured in the local Y-direction [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.Eccentricity">
            <summary>Eccentricity of all vertices</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.CutOutPolygons">
            <summary>List of full depth cut-out polygons (intersection with the plate's outline polygon is allowed)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.LocalCS">
            <summary>Local coordinate system (right-handed). The 2D polygonal plate outline is defined in the local XZ-plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.ReferencePoint">
            <summary>Location of the reference point [m]: origin of the local coordinate system in global coordinates</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.SectionID">
            <summary>Plate's section ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.MaterialOverrides">
            <summary>List of mappings to replace the default materials provided by the plate section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.Plate.AdditionalParameters">
            <summary>Optional additional parameters</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Plate.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.Plate" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Plate.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Plate.Equals(BuildSoft.UBSM.Physical.Geometry.Plate)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Plate.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Plate.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.Plate.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PadFootingPart">
            <summary>Describes a part of a footing</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.SectionID">
            <summary>Part's section ID (parametric, custom or variable section)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.SectionMirroredAroundZAxis">
            <summary>Indicates that the provided section should be mirrored around the z-axis</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.MaterialOverrides">
            <summary>Defines a list of materials to replace in the section definition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.Height">
            <summary>The height of the footing part</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.PadFootingPart" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.Equals(BuildSoft.UBSM.Physical.Geometry.PadFootingPart)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFootingPart.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PadFooting">
            <summary>Describes a pad footing</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFooting.ID">
            <summary>Pad footing ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFooting.Name">
            <summary>Localizable name of the pad footing</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFooting.ReferencePointPosition">
            <summary>The reference point position in the upper side of the pad footing</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFooting.LocalCS">
            <summary>Local coordinate system (right-handed). Depths are measured along the X-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFooting.PadFootingType">
            <summary>The type of the pad footing</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFooting.Parts">
            <summary>An ordered list of footing parts</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFooting.CardinalPoint">
            <summary>Cardinal point regarding to the reference point</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PadFooting.AdditionalParameters">
            <summary>Optional additional parameters</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFooting.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.PadFooting" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFooting.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFooting.Equals(BuildSoft.UBSM.Physical.Geometry.PadFooting)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFooting.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFooting.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PadFooting.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PadFooting.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Geometry.PadFooting"/>
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.SimplePlate">
            <summary>Describes a uniform plate defined by an extruded polygon</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.ID">
            <summary>Plate ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.Name">
            <summary>Localizable name of the plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.OuterPolygon">
            <summary>Polygon which defines the outline of the plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.AnchorPlane">
            <summary>Anchor plane of the plate section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.OffsetY">
            <summary>Plate offset defined in the local Y-direction [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.Eccentricity">
            <summary>Eccentricity of all vertices</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.LocalCS">
            <summary>Local coordinate system (right-handed). The 2D polygonal plate outline is defined in the local XZ-plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.ReferencePoint">
            <summary>Location of the reference point [m]: origin of the local coordinate system in global coordinates</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.Thickness">
            <summary>Thickness of the plate [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.MaterialID">
            <summary>Simple plate's material ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.SimplePlate.Modifiers">
            <summary>List of part modifiers</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.SimplePlate.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.SimplePlate" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.SimplePlate.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.SimplePlate.Equals(BuildSoft.UBSM.Physical.Geometry.SimplePlate)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.SimplePlate.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.SimplePlate.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.SimplePlate.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PlaneModifier">
            <summary>Describes a material reduction or addition using a plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.PlaneModifierType">
            <summary>Type of plane modifier to be applied</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.LocalCS">
            <summary>Local coordinate system (right-handed), the plane modifier is defined in the local XZ-plane. Cuts are applied on the side of the positive Y-axis.</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.ReferencePoint">
            <summary>Location of the reference point [m]: origin of the local coordinate system in global coordinates</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.PlaneModifier" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.Equals(BuildSoft.UBSM.Physical.Geometry.PlaneModifier)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PlaneModifier.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.PartModifiers">
            <summary>Defines a set of modifications applied to a part</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PartModifiers.PlaneModifiers">
            <summary>List of plane modifiers</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PartModifiers.ContourCuts">
            <summary>List of cuts defined by a contour with an extrusion height (e.g. notches)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.PartModifiers.HoleGroups">
            <summary>List of hole groups</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PartModifiers.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.PartModifiers" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PartModifiers.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PartModifiers.Equals(BuildSoft.UBSM.Physical.Geometry.PartModifiers)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PartModifiers.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PartModifiers.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.PartModifiers.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.HoleGroup">
            <summary> Describes a hole group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.ID">
            <summary>Hole group ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.CoordinateSystemType">
            <summary>Type of coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.Positions">
            <summary> <para>Coordinates of the hole positions [m]</para> <para>-Cartesian coordinates are defined in the local XZ-plane</para> <para>Polar coordinates are defined respectively by radius and angle [rad], positive angles are taken from the local positive Z-axis to the local positive X-axis</para> </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.LocalCS">
            <summary>Local coordinate system (right-handed), the hole coordinates are defined in the local XZ-plane</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.ReferencePoint">
            <summary>Location of the reference point [m]: origin of the local coordinate system in global coordinates</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.HoleType">
            <summary>Type of hole</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.HoleDiameter">
            <summary>Diameter of the hole</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.Information">
            <summary>Optional information about the hole group. Key-Value pairs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.HoleGroup.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Geometry.HoleGroup" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.HoleGroup.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.HoleGroup.Equals(BuildSoft.UBSM.Physical.Geometry.HoleGroup)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.HoleGroup.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.HoleGroup.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Geometry.HoleGroup.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Geometry.HoleGroup.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Geometry.HoleGroup"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.KeyVal.BlindHoleDepth">
            <summary> Depth of the blind hole [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.KeyVal.SlottedHoleXTol">
            <summary>The key for the X tolerance for a slotted hole (it is measured along the X-local axis of the hole group).</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Geometry.HoleGroup.KeyVal.SlottedHoleZTol">
            <summary>The key for the Z tolerance for a slotted hole (it is measured along the Z-local axis of the hole group).</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.NamespaceDoc">
            <summary>Exchange library concerning connections in the physical model</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.AnchorType">
            <summary>Defines a set of possible anchor types</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorType.Straight">
            <summary>Straight</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorType.LBolt">
            <summary>L-Bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorType.JBolt">
            <summary>J-Bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorType.DoubleEnd">
            <summary>Double end</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorType.AllThreaded">
            <summary>All threaded</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorType.Eyebolt">
            <summary>Eyebolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorType.UBolt">
            <summary>U-bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorType.SquareBend">
            <summary>Square bend</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.BoltHeadType">
            <summary>Defines a set of possible head types for a bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.Hexagonal">
            <summary>Hexagonal head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.SlottedHexagonal">
            <summary>Slotted hexagonal head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.Square">
            <summary>Square head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.CounterSunk">
            <summary>Countersunk head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.Round">
            <summary>Round head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.Pan">
            <summary>Pan head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.Oval">
            <summary>Oval head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.Fillster">
            <summary>Fillster head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltHeadType.Cheese">
            <summary>Cheese head</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.FastenerAssemblyType">
            <summary>Defines a set of possible fastener assembly types</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerAssemblyType.Bolt">
            <summary>Bolt assembly</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerAssemblyType.AnchorBolt">
            <summary>Anchor bolt assembly</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.AssemblySite">
            <summary>Defines a set of possible assembly sites</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AssemblySite.Workshop">
            <summary>Workshop</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AssemblySite.OnSite">
            <summary>On site</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.NutType">
            <summary>Defines a set of possible shapes for a nut</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.NutType.Hexagonal">
            <summary>Hexagonal</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.NutType.Square">
            <summary>Square</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.NutType.Wing">
            <summary>Wing</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.NutType.Cap">
            <summary>Cap</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.NutType.Acorn">
            <summary>Acorn</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.NutType.Tee">
            <summary>Tee</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.PartType">
            <summary>Defines a set of possible types of parts which can participate in a connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PartType.Bar">
            <summary>Bar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PartType.PolyBar">
            <summary>PolyBar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PartType.Plate">
            <summary>Plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PartType.PadFooting">
            <summary>Pad footing</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PartType.ConnectionBar">
            <summary>ConnectionBar</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PartType.ConnectionPlate">
            <summary>ConnectionPlate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PartType.GroutFilling">
            <summary>Grout filling</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.PreparationType">
            <summary>Defines a set of preparations for a welded part</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.NoPreparation">
            <summary>Not prepared</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.SquareGroove">
            <summary>Square groove</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.SingleVGroove">
            <summary>Single V groove</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.DoubleVGroove">
            <summary>Double V groove</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.SingleBevelGroove">
            <summary>Single bevel groove</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.DoubleBevelGroove">
            <summary>Double bevel groove</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.SingleUGroove">
            <summary>Single U groove</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.DoubleUGroove">
            <summary>Double U groove</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.SingleJGroove">
            <summary>Single J groove</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.PreparationType.DoubleJGroove">
            <summary>Double J groove</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.SurfaceType">
            <summary>Defines a set of possible types of contact surfaces</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.SurfaceType.NoSurfaceTreatment">
            <summary>No surface treatment</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.ThreadMethod">
            <summary>Manufacturing method of a thread</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ThreadMethod.RolledThread">
            <summary>Rolled</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.ThreadType">
            <summary>Type of standard for the definition of the thread's geometry</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ThreadType.ISO">
            <summary>"International Organization for Standardization" thread type</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ThreadType.UTS">
            <summary>"Unified Thread Standard" thread type</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.WasherType">
            <summary>Defines a set of possible shapes for a washer</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WasherType.Circular">
            <summary>Circular</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WasherType.Square">
            <summary>Square</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.WeldProcess">
            <summary>Defines a set of possible welding processes</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldProcess.SMAW">
            <summary>SMAW process</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldProcess.GMAW">
            <summary>GMAW process</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldProcess.FCAW">
            <summary>FCAW process</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldProcess.SAW">
            <summary>SAW process</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.WeldType">
            <summary>Defines a set of weld types</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldType.FilletWeld">
            <summary>Fillet weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldType.IntermittendFilletWeld">
            <summary>Intermittend fillet weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldType.PJPWeld">
            <summary>Partial joint penetration weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldType.CJPWeld">
            <summary>Complete joint penetration weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.WeldType.PlugWeld">
            <summary>Plug weld</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.AnchorBolt">
            <summary>Defines an anchor bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.ID">
            <summary>Anchor bolt ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Name">
            <summary>Localizable name of the anchor bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.MaterialID">
            <summary>Anchor bolt's material ID (steel grade)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Diameter">
            <summary>Nominal diameter [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Length">
            <summary>Length from the free anchor end to the outside radius of the bend [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.ThreadMethod">
            <summary>Manufacturing method of the thread</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.ThreadType">
            <summary>Type of standard for the definition of the thread's geometry</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.ThreadLength">
            <summary>Length of the threaded part [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.ThreadPitch">
            <summary>Pitch of the thread [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.AnchorType">
            <summary>Shape of the anchor bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Information">
            <summary> <para> Optional information about the anchor bolt. Key-Value pairs (<see cref="T:BuildSoft.UBSM.Physical.Connections.AnchorBolt.KeyVal" />) </para> <para>A list of allowable keys (general):</para> <list type="table"> <listheader> <term>Key</term> <term>Description</term> </listheader> <item> <term>FixedNormalResistance</term> <term>Fixed normal resistance of the anchor bolt [N]. If negative value, this will be ignored.</term> </item> <item> <term>FixedShearResistance</term> <term>Fixed shear resistance of the anchor bolt [N]. If negative value, this will be ignored.</term> </item> </list> <para>A list of allowable keys for square bend anchors:</para> <list type="table"> <listheader> <term>Key</term> <term>Description</term> </listheader> <item> <term>BendAngle</term> <term>Angle of the bend [m].</term> </item> <item> <term>BendRadius</term> <term>Inside radius of the bend [m].</term> </item> <item> <term>BendLength</term> <term>Length from the embedded anchor end to the outside radius of the bend [m].</term> </item> <item> <term>InnerBendAngle</term> <term>Angle of the inner bend [rad].</term> </item> <item> <term>InnerBendRadius</term> <term>Inside radius of the inner bend [m].</term> </item> <item> <term>InnerBendLength</term> <term>Length from the outside radius of the bend to the outside radius of the inner bend [m].</term> </item> </list> <para>A list of allowable keys for L/J-bolt anchors:</para> <list type="table"> <listheader> <term>Key</term> <term>Description</term> </listheader> <item> <term>BendAngle</term> <term>Angle of the bend [m].</term> </item> <item> <term>BendRadius</term> <term>Inside radius of the bend [m].</term> </item> <item> <term>BendLength</term> <term>Length from the embedded anchor end to the outside radius of the bend [m].</term> </item> </list> <para>A list of allowable keys for DoubleEnd anchors:</para> <list type="table"> <listheader> <term>Key</term> <term>Description</term> </listheader> <item> <term>TopThreadLength</term> <term>Length of the thread from the free anchor end [m].</term> </item> </list> </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.LastChanged">
            <summary>Date at which the anchor bolt was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Status">
            <summary>Indicates the status of the anchor bolt in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.ReadOnly">
            <summary>Indicates if the anchor bolt is read only because it is a default anchor bolt and not a user-defined anchor bolt</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.AnchorBolt" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Equals(BuildSoft.UBSM.Physical.Connections.AnchorBolt)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.HasEqualContent(BuildSoft.UBSM.Physical.Connections.AnchorBolt)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.HasEqualCriticalContent(BuildSoft.UBSM.Physical.Connections.AnchorBolt)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.AnchorBolt.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.AnchorBolt"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.KeyVal.StandardDesignation">
            <summary> Designation of the anchor bolt standard </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.KeyVal.PropertyClassDesignation">
            <summary> Designation of the anchor bolt property class </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.KeyVal.BendRadius">
            <summary> Inner radius of the bend [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBolt.KeyVal.BendLength">
            <summary> Length from the embedded anchor end to the outside radius of the bend [m]</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.DatabaseHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.DatabaseContentHashCode">
            <summary>
            The content hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBolt.DatabaseCriticalContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly">
            <summary>Defines an anchor bolt assembly</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.ID">
            <summary>Anchor bolt assembly ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.Name">
            <summary>Localizable name of the anchor bolt assembly</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.AnchorBoltID">
            <summary>Anchor bolt's ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.NutIDsBasePlateBefore">
            <summary>List of nut ID's before the base plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.NutIDsBasePlateBehind">
            <summary>List of nut ID's behind the base plate (e.g. for levelling)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.NutIDsAnchorPlateBefore">
            <summary>List of nut ID's before the anchor plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.NutIDsAnchorPlateBehind">
            <summary>List of nut ID's behind the anchor plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.WasherIDsBasePlateBefore">
            <summary>List of washer ID's before the base plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.WasherIDsBasePlateBehind">
            <summary>List of washer ID's behind the base plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.WasherIDsAnchorPlateBefore">
            <summary>List of washer ID's before the anchor plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.WasherIDsAnchorPlateBehind">
            <summary>List of washer ID's behind the anchor plate</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.Information">
            <summary>Optional information about the anchor bolt assembly. Key-Value pairs</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.MaterialOverrides">
            <summary>Defines a list of materials to replace in the anchor bolt assembly definition</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.Equals(BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.AnchorBoltAssembly.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Bolt">
            <summary>Defines a bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.ID">
            <summary>Bolt ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.Name">
            <summary>Localizable name of the bolt</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.MaterialID">
            <summary>Bolt's material ID (steel grade)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.Diameter">
            <summary>Nominal diameter [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.Length">
            <summary>Length [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.ThreadLength">
            <summary>Length of the threaded part [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.HeadType">
            <summary>Type of the bolt head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.ThreadMethod">
            <summary>Manufacturing method of the thread</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.ThreadType">
            <summary>Type of standard for the definition of the thread's geometry</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.ThreadPitch">
            <summary>Pitch of the thread [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.Information">
            <summary> Optional information about the bolt. Key-Value pairs (<see cref="T:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.LastChanged">
            <summary>Date at which the bolt was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.Status">
            <summary>Indicates the status of the bolt in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.ReadOnly">
            <summary>Indicates if the bolt is read only because it is a default bolt and not a user-defined bolt</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.Bolt" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.Equals(BuildSoft.UBSM.Physical.Connections.Bolt)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.HasEqualContent(BuildSoft.UBSM.Physical.Connections.Bolt)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.HasEqualCriticalContent(BuildSoft.UBSM.Physical.Connections.Bolt)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.Bolt"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal.HeadHeight">
            <summary> Height of the bolt head [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal.HeadWidthAcrossFlats">
            <summary> Width of the bolt head across flats [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal.HeadWidthAcrossCorners">
            <summary> Width of the bolt head across corners [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal.WasherFaceDiameter">
            <summary> Diameter of the washer face under the bolt head [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal.WasherFaceThickness">
            <summary> Thickness of the washer face under the bolt head </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal.ShankDiameter">
            <summary> Diameter of the bolt shank [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal.StandardDesignation">
            <summary> Designation of the bolt standard </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Bolt.KeyVal.PropertyClassDesignation">
            <summary> Designation of the bolt property class </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.DatabaseHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.DatabaseContentHashCode">
            <summary>
            The content hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Bolt.DatabaseCriticalContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.BoltAssembly">
            <summary>Defines a bolt assembly</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltAssembly.ID">
            <summary>Bolt assembly ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltAssembly.Name">
            <summary>Localizable name of the bolt assembly</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltAssembly.BoltID">
            <summary>Bolt's ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltAssembly.NutIDs">
            <summary>List of nut ID's counting from the bolt head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltAssembly.WasherIDsBolt">
            <summary>List of washer ID's placed behind the bolt head</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltAssembly.WasherIDsNut">
            <summary>List of washer ID's placed before the nut</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltAssembly.Information">
            <summary>Optional information about the bolt assembly. Key-Value pairs</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.BoltAssembly.MaterialOverrides">
            <summary>Defines a list of materials to replace in the bolt assembly definition</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.BoltAssembly.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.BoltAssembly" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.BoltAssembly.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.BoltAssembly.Equals(BuildSoft.UBSM.Physical.Connections.BoltAssembly)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.BoltAssembly.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.BoltAssembly.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.BoltAssembly.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Connection">
            <summary>Defines a connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.ID">
            <summary>Connection ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.Name">
            <summary>Localizable name of the connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.BarIDs">
            <summary> List of IDs of physical bars (<see cref="T:BuildSoft.UBSM.Physical.Geometry.Bar" />) associated with the connection </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.PolyBarIDs">
            <summary> List of IDs of polybars (<see cref="T:BuildSoft.UBSM.Physical.Geometry.PolyBar" />) associated with the connection </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.PlateIDs">
            <summary> List of IDs of physical plates (<see cref="T:BuildSoft.UBSM.Physical.Geometry.Plate" />) associated with the connection </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.PadFootingIDs">
            <summary> List of IDs of pad footings (<see cref="T:BuildSoft.UBSM.Physical.Geometry.PadFooting" />) associated with the connection </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.FastenerGroups">
            <summary>List of fastener groups in the connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.GroutFillings">
            <summary>List of grout fillings in the connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.Welds">
            <summary>List of welds in the connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.ConnectionBars">
            <summary> List of own bars (<see cref="T:BuildSoft.UBSM.Physical.Geometry.Bar" />) within the connection </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.ConnectionPlates">
            <summary> List of own plates (<see cref="T:BuildSoft.UBSM.Physical.Geometry.SimplePlate" />) within the connection </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.Haunches">
            <summary>List of haunches in the connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.ConnectionPartItems">
            <summary>List of part items in the connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.ContactSurfaces">
            <summary>List of contact surfaces in the connection</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.Information">
            <summary>Optional information about the connection. Key-Value pairs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Connection.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.Connection" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Connection.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Connection.Equals(BuildSoft.UBSM.Physical.Connections.Connection)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Connection.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Connection.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Connection.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Connection.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.Connection"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Connection.KeyVal.ConnectionGuid">
            <summary> Guid of the connection </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.ContactSurface">
            <summary>Defines a contact surface between two parts</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ContactSurface.ID">
            <summary>Contact surface ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ContactSurface.Part1ID">
            <summary>ID of part 1</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ContactSurface.Part1Type">
            <summary>Type of part 1</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ContactSurface.Part2ID">
            <summary>ID of part 2</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ContactSurface.Part2Type">
            <summary>Type of part 2</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ContactSurface.SurfaceType">
            <summary>Type of contact surface</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ContactSurface.FrictionCoefficient">
            <summary>Friction coefficient of the contact surface</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ContactSurface.Information">
            <summary>Optional information about the contact surface. Key-Value pairs</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ContactSurface.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.ContactSurface" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ContactSurface.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ContactSurface.Equals(BuildSoft.UBSM.Physical.Connections.ContactSurface)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ContactSurface.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ContactSurface.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ContactSurface.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.FastenerGroup">
            <summary> Defines a group of fasteners </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.ID">
            <summary>Fastener group ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.HoleGroupIDs">
            <summary>List of IDs of the hole groups to connect with the fastener group</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.CoordinateSystemType">
            <summary>Type of coordinate system</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.Positions">
            <summary> <para>Coordinates of the fastener assembly positions [m].</para> <para>-Cartesian coordinates are defined in the local XZ-plane</para> <para>-Polar coordinates are defined respectively by radius and angle [rad], positive angles are taken from the local positive Z-axis to the local positive X-axis</para> </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.LocalCS">
            <summary>Local coordinate system (right-handed), the fastener assembly coordinates are defined in the local XZ-plane, the local Y-axis corresponds to the longitudinal axis of the fastener</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.ReferencePoint">
            <summary>Location of the reference point [m]: origin of the local coordinate system in global coordinates</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.FastenerAssemblyType">
            <summary>Type of the fastener assembly</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.FastenerAssemblyID">
            <summary>ID of the fastener assembly</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.AssemblySite">
            <summary>Location where the used fastener assembly is carried out</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.Preloaded">
            <summary>Indicates whether the fastener assembly is preloaded</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.Information">
            <summary> Optional information about the fastener group. Key-Value pairs (<see cref="T:BuildSoft.UBSM.Physical.Connections.FastenerGroup.KeyVal" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.FastenerGroup.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.FastenerGroup" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.FastenerGroup.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.FastenerGroup.Equals(BuildSoft.UBSM.Physical.Connections.FastenerGroup)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.FastenerGroup.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.FastenerGroup.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.FastenerGroup.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.FastenerGroup.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.FastenerGroup"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.FastenerGroup.KeyVal.ReferenceEmbedmentDepth">
            <summary> Total embedded depth of the anchor in the concrete [m] </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Grout">
            <summary> Defines a grout </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Grout.Geometry">
            <summary>The geometrical definition of the grout</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Grout.Information">
            <summary> Optional information about the grout. Key-Value pairs (<see cref="T:BuildSoft.UBSM.Physical.Connections.Grout.KeyVal" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Grout.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.Grout" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Grout.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Grout.Equals(BuildSoft.UBSM.Physical.Connections.Grout)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Grout.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Grout.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Grout.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Grout.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.Grout"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Grout.KeyVal.CharacteristicCompressiveStrength">
            <summary> Characteristic compressive strength [N/m²] </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Nut">
            <summary> Defines a nut </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.ID">
            <summary>Nut ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.Name">
            <summary>Localizable name of the nut</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.Diameter">
            <summary>Nominal diameter [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.ThreadPitch">
            <summary>Pitch of the thread</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.ThreadMethod">
            <summary>Manufacturing method of the thread</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.ThreadType">
            <summary>Type of thread</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.MaterialID">
            <summary>Nut's material ID (steel grade)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.NutType">
            <summary>Type of Nut</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.Information">
            <summary> Optional information about the nut. Key-Value pairs (<see cref="T:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.LastChanged">
            <summary>Date at which the nut was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.Status">
            <summary>Indicates the status of the nut in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.ReadOnly">
            <summary>Indicates if the nut is read only because it is a default nut and not a user-defined nut</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.Nut" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.Equals(BuildSoft.UBSM.Physical.Connections.Nut)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.HasEqualContent(BuildSoft.UBSM.Physical.Connections.Nut)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.HasEqualCriticalContent(BuildSoft.UBSM.Physical.Connections.Nut)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.Nut"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal.WasherFaceDiameter">
            <summary> Diameter of the washer face [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal.WasherFaceThickness">
            <summary> Thickness of the washer face [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal.Height">
            <summary> Height of the nut [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal.WidthAcrossFlats">
            <summary> Width of the nut across flats [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal.WidthAcrossCorners">
            <summary> Width of the nut across corners [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal.StandardDesignation">
            <summary> Designation of the nut standard </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Nut.KeyVal.PropertyClassDesignation">
            <summary> Designation of the nut property class </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.DatabaseHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.DatabaseContentHashCode">
            <summary>
            The content hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Nut.DatabaseCriticalContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Washer">
            <summary> Defines a washer </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.ID">
            <summary>Washer ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.Name">
            <summary>Localizable name of the washer</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.Diameter">
            <summary>Nominal diameter [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.MaterialID">
            <summary>Washer's material ID (steel grade)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.WasherType">
            <summary>Type of washer</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.Information">
            <summary> Optional information about the washer. Key-Value pairs (<see cref="T:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.LastChanged">
            <summary>Date at which the washer was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.Status">
            <summary>Indicates the status of the washer in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.ReadOnly">
            <summary>Indicates if the washer is read only because it is a default washer and not a user-defined washer</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.Washer" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.Equals(BuildSoft.UBSM.Physical.Connections.Washer)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.HasEqualContent(BuildSoft.UBSM.Physical.Connections.Washer)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.HasEqualCriticalContent(BuildSoft.UBSM.Physical.Connections.Washer)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.Washer"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal.InnerDiameter">
            <summary> Hole diameter of the washer [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal.OuterDiameter">
            <summary> Outer diameter of the washer [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal.Thickness">
            <summary> Thickness of the washer [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal.InnerChamfer">
            <summary> Size of the inner chamfer [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal.OuterChamfer">
            <summary> Size of the outer chamfer [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal.StandardDesignation">
            <summary> Designation of the washer standard </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Washer.KeyVal.PropertyClassDesignation">
            <summary> Designation of the washer property class </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.DatabaseHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.DatabaseContentHashCode">
            <summary>
            The content hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Washer.DatabaseCriticalContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Weld">
            <summary> Defines a weld </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.ID">
            <summary>Weld ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.Name">
            <summary>Localizable name of the weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.ElectrodeType">
            <summary>Type of electrode e.g. E60xx, E70xx, ...</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.Path3D">
            <summary>3D Path of the weld root</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.MainPartID">
            <summary>ID of the main part to weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.MainPartType">
            <summary>Type of the main part to weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.SecPartID">
            <summary>ID of the secondary part to weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.SecPartType">
            <summary>Type of the secondary part to weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.AroundWeld">
            <summary>Indicates whether the weld is an around weld (true) or an edge weld (false)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.WeldingSite">
            <summary>Location where the weld process is carried out</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.WeldProcess">
            <summary>Weld process applied</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.PreparationType">
            <summary>Type of weld preparation</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.WeldType">
            <summary>Type of weld</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.Information">
            <summary> Optional information about the weld. Key-Value pairs (<see cref="T:BuildSoft.UBSM.Physical.Connections.Weld.KeyVal" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Weld.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.Weld" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Weld.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Weld.Equals(BuildSoft.UBSM.Physical.Connections.Weld)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Weld.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Weld.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Weld.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Weld.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.Weld"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.KeyVal.EffectiveThroat">
            <summary> Effective throat size of the weld [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.KeyVal.SecPartThickness">
            <summary> Thickness of the ending part (T and C joints, groove weld) [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.KeyVal.Size">
            <summary> Size of the weld [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.KeyVal.Length">
            <summary> Length of the weld [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.KeyVal.RootOpening">
            <summary> Root opening (groove weld) [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Weld.KeyVal.Angle">
            <summary> Groove angle (groove weld) [rad] </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Haunch">
            <summary>Defines a haunch</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Haunch.ID">
            <summary>Haunch ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Haunch.ConnectionBarIDs">
            <summary>List of connection bar ID's</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Haunch.ConnectionPlateIDs">
            <summary>List of connection plate ID's</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Haunch.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.Haunch" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Haunch.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Haunch.Equals(BuildSoft.UBSM.Physical.Connections.Haunch)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Haunch.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Haunch.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.Haunch.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem">
            <summary>Describes connection data for a part</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.PartID">
            <summary>ID of the part which contains the data</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.PartType">
            <summary>Type of part</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.Modifiers">
            <summary>List of part modifiers</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.Equals(BuildSoft.UBSM.Physical.Connections.ConnectionPartItem)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Connections.ConnectionPartItem.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Connections.Information.KeyVal">
            <summary>
            This class exposes all string Keys/Values used by <see cref="T:BuildSoft.UBSM.Physical.Connections.Information"/>
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.CalculationMethod">
            <summary> Calculation method </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.SteelStandard">
            <summary> Steel standard designation </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.ConcreteStandard">
            <summary> Concrete standard designation </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.IsBracedStructure">
            <summary> Boolean value which defines if the structure is braced [True] or unbraced [False] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.MinimumWeldSize">
            <summary> Minimum allowable weld size [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.BoltCoefficientE1">
            <summary> ???? </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.BoltCoefficientP1">
            <summary> ???? </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.BoltCoefficientE2">
            <summary> ???? </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.BoltCoefficientP2">
            <summary> ???? </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Connections.Information.KeyVal.BoltCoefficientL">
            <summary> ???? </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.MaterialType">
            <summary>Provides a set of possible material types</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.Custom">
            <summary>Specifies a "custom" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.Concrete">
            <summary>Specifies a "concrete" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.Steel">
            <summary>Specifies a "steel" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.ReinforcingSteel">
            <summary>Specifies a "reinforcement steel" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.BoltSteel">
            <summary>Specifies a "bolt steel" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.NutSteel">
            <summary>Specifies a "nut steel" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.WasherSteel">
            <summary>Specifies a "washer steel" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.Aluminium">
            <summary>Specifies an "aluminium" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.Timber">
            <summary>Specifies a "timber" material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.MaterialType.Glass">
            <summary>Specifies a "glass" material</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.ProductionMethodType">
            <summary>Provides a set of possible production method types for cross-sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ProductionMethodType.Rolled">
            <summary>For rolled cross-sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ProductionMethodType.Welded">
            <summary>For welded cross-sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ProductionMethodType.ColdFormed">
            <summary>For cold formed cross-sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ProductionMethodType.CastInPlate">
            <summary>For cast-in-place cross-sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ProductionMethodType.Precast">
            <summary>For precast cross-sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ProductionMethodType.Unknown">
            <summary>The production method is unknown</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.ParametricSectionType">
            <summary>Provides a set of cross-section types that can be defined by parameters</summary>
            <remarks> The following pictures show all types of parametric cross-sections<br /><img src="\images\ParametricSectionTypes01.png" /><br /><img src="\images\ParametricSectionTypes02.png" /><br /><img src="\images\ParametricSectionTypes03.png" /></remarks>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.UserDefined">
            <summary>User defined parametric section. The shape of the cross-section is defined by use of instructions</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SolidRectangle">
            <summary>Rectangular: H, B [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.HollowRectangle">
            <summary>Rounded rectangular hollow: H, B, tw, tf, or, ir [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.BoxRectangle">
            <summary>Boxed rectangular hollow: H, B, tw, tf [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.HollowBox">
            <summary>Hollow box profile: H, Bb, tw, tfb, tft, at, ab [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SolidCircle">
            <summary>Circular: H [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.HollowCircle">
            <summary>Circular hollow: H, tw [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SolidEllipse">
            <summary>Elliptical: H, B [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.HollowEllipse">
            <summary>Elliptical hollow: H, B, tw [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SolidTriangle">
            <summary>Regular triangle: H, r [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.HollowTriangle">
            <summary>Hollow regular triangle: H, r, tw [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SolidHexagon">
            <summary>Regular hexagon: H, r [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.HollowHexagon">
            <summary>Hollow regular hexagon: H, r, tw [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SolidOctagon">
            <summary>Regular octagon: H, r [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.HollowOctagon">
            <summary>Hollow regular octagon: H, r, tw [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SymmetricSolidQuadrangle">
            <summary>Solid symmetric quadrangle: H, Bb, Bt [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.AsymmetricSolidQuadrangle">
            <summary>Solid asymmetric quadrangle: H, Bb, ctl, ctr [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.RoundedT">
            <summary>Rounded T-shaped: H, B, tf, tw, r, rf, rw, ctf, ctw [m], sw, sf [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.T">
            <summary>T-shaped: H, B, tf, tw [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SlopedT">
            <summary>Sloped T-shaped: H, B, tf, twt, twb [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.RoundedSymmetricI">
            <summary>Rounded symmetric I-shaped: H, B, tf, tw, r1, r2, ctf [m], sf [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SymmetricI">
            <summary>Symmetric I-shaped: H, B, tf, tw, r [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.AsymmetricI">
            <summary>Asymmetric I-shaped (it is symmetric respect to the web): H, Bb, Bt, tfb, tft, tw, rb, rt [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.UnequalI">
            <summary>Unequal I-shaped: H, tw, atl, btl, atr, btr, abl, bbl, abr, bbr [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.RoundedChannel">
            <summary>Channel: H, B, tw, tf, r1, r2, ctf [m], sf [rad] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.Channel">
            <summary>Channel: H, B, tw, tf, r [m] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.UnequalL">
            <summary>L-shaped with variable thickness: H, B, tf, tw, r, rf, rw [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.L">
            <summary>L-shaped: H, B, t, r1, r2 [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.SolidZ">
            <summary>Solid Z-shaped: H, tw, at, bt, ab, bb [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.Z">
            <summary>Z-shaped: H, Bb, Bt, t, r [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.LippedZ">
            <summary>Lipped Z-shaped: H, Bb, Bt, t, r, cb, ct [m], sfb, sft, scb, sct [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.S">
            <summary>S-shaped: H, Hb, Ht, B, t, r, rw, c [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.C">
            <summary>C-shaped: H, B, t, r, c [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.LippedC">
            <summary>Lipped C-shaped: H, Bb, Bt, t, r, cb, ct [m], sfb, sft, scb, sct [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.DoubleLippedC">
            <summary>Double lipped C-shaped: H, Bb, Bt, t, r, cb, ct, ccb, cct [m], sfb, sft [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.U">
            <summary>U-shaped: H, Bb, Bt, t, r [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.Delta">
            <summary>Delta: Bb, Bt, H, t, r, a, c [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.Rail">
            <summary>Delta: B, H, t, c1, c2, r [m], s1, s2 [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.Angle">
            <summary>Angle: H, B, r, t [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.LippedAngle">
            <summary>LippedAngle: H, B, ch, cb, r, t [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.Sigma">
            <summary>Sigma: H, Hb, Ht, Bb, Bt, wd, t, r, rw, cb, ct [m], sfb, sft, scb, sct [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.LippedSigma">
            <summary>Lipped sigma: H, Hb, Ht, Bb, Bt, wd, t, r, rw, cb, ct, ccb, cct [m], sfb, sft [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.Omega">
            <summary>Omega: H, Bb, Bt, a, t, r [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSectionType.LippedOmega">
            <summary>Lipped omega: H, Bb, Bt, a, t, r, c [m]</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Model">
            <summary>Contains all the necessary information to describe a physical model, like materials, sections, bars, plates and connections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.Name">
            <summary>Localizable name of the model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.ID">
            <summary>Unique identifier for the physical model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.Materials">
            <summary>A list of all materials</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.ParametricSections">
            <summary>A list of all parametric sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.CustomSections">
            <summary>A list of all custom sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.VariableSections">
            <summary>A list of all variable sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.PlateSections">
            <summary>A list of all plate sections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.Bars">
            <summary>A list of all geometrical bars</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.PolyBars">
            <summary>A list of all geometrical polybars</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.Plates">
            <summary>A list of all geometrical plates</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.PadFootings">
            <summary>A list of all geometrical pad footings</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.Connections">
            <summary>A list of all connections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.Bolts">
            <summary>A list of all bolts</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.Nuts">
            <summary>A list of all nuts</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.Washers">
            <summary>A list of all washers</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.AnchorBolts">
            <summary>A list of all anchor bolts</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.BoltAssemblies">
            <summary>A list of all bolt assemblies used in connections</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Model.AnchorBoltAssemblies">
            <summary>A list of all anchor bolt assemblies used in connections</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Model" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.Equals(BuildSoft.UBSM.Physical.Model)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.HasEqualContent(BuildSoft.UBSM.Physical.Model)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Model.HasEqualCriticalContent(BuildSoft.UBSM.Physical.Model)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Material">
            <summary>Defines a material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Material.ID">
            <summary>The database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Material.Name">
            <summary>Localizable name of the material</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Material.MaterialType">
            <summary>Describes what kind of material it is</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Material.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Material.LastChanged">
            <summary>Date at which the material was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Material.Status">
            <summary>Indicates the status of the material in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Material.ReadOnly">
            <summary>Indicates if the material is read only because it is a default material and not a user-defined material</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Material" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.Equals(BuildSoft.UBSM.Physical.Material)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.HasEqualContent(BuildSoft.UBSM.Physical.Material)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.HasEqualCriticalContent(BuildSoft.UBSM.Physical.Material)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.DatabaseHashCode(BuildSoft.UBSM.Analysis.MaterialProperties)">
            <summary>
            The hash code as defined in a database (of the Material/MaterialProperties pair)
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.DatabaseContentHashCode(BuildSoft.UBSM.Analysis.MaterialProperties)">
            <summary>
            The content hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Material.DatabaseCriticalContentHashCode(BuildSoft.UBSM.Analysis.MaterialProperties)">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Measurement">
            <summary> Represents a measurement of a parametric cross-section (<see cref="T:BuildSoft.UBSM.Physical.ParametricSectionType" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Measurement.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Measurement.Name">
            <summary>The name or key of the measurement</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Measurement.Value">
            <summary>The value of the meassurement</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.Measurement.Quantity">
            <summary>Quantity associated to the value</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.Measurement" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.Equals(BuildSoft.UBSM.Physical.Measurement)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.HasEqualContent(BuildSoft.UBSM.Physical.Measurement)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.Measurement.HasEqualCriticalContent(BuildSoft.UBSM.Physical.Measurement)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.Measurement.Names">
            <summary>
            This class exposes all string names used by <see cref="T:BuildSoft.UBSM.Physical.Measurement"/>
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.ParametricSection">
            <summary>Define a parametric cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.Name">
            <summary>Localizable name of the parametric cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.SectionType">
            <summary>Describes what kind of parametric cross-section it is</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.MaterialID">
            <summary>Material ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.ProductionMethod">
            <summary>Describes the production method</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.Measurements">
            <summary>A list of measurements associated with the section type</summary>
            <remarks> The following pictures show the measurements that correspond to each type of parametric cross-section<br /><img src="\images\ParametricSectionTypes01.png" /><br /><img src="\images\ParametricSectionTypes02.png" /><br /><img src="\images\ParametricSectionTypes03.png" /></remarks>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.UserDefinedGeometryInstructions">
            <summary> A set of instructions to define the shape of an user-defined parametric cross-section type (<see cref="F:BuildSoft.UBSM.Physical.ParametricSectionType.UserDefined" />). Is empty when the cross-section is not user-defined type </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.LastChanged">
            <summary>Date at which the cross-section was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.Status">
            <summary>Indicates the status of the cross-section in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.ParametricSection.ReadOnly">
            <summary>Indicates if the cross-section is read only because it is a default section and not a user-defined cross-section</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.ParametricSection" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.Equals(BuildSoft.UBSM.Physical.ParametricSection)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.HasEqualContent(BuildSoft.UBSM.Physical.ParametricSection)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.HasEqualCriticalContent(BuildSoft.UBSM.Physical.ParametricSection)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="P:BuildSoft.UBSM.Physical.ParametricSection.Item(System.String)">
            <summary>
            Get a measurement by key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.DatabaseHashCode(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>
            The hash code as defined in a database (of the SingleSection/SectionProperties pair)
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.DatabaseContentHashCode(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>
            The hash code as defined in a database (of the SingleSection/SectionProperties pair)
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.ParametricSection.DatabaseCriticalContentHashCode(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>
            The hash code as defined in a database (of the SingleSection/SectionProperties pair)
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.PointRegion">
            <summary>Define a circular point region</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PointRegion.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PointRegion.MaterialID">
            <summary>Material ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PointRegion.Radius">
            <summary>Radius [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PointRegion.Location">
            <summary>The location of the centre in the section [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PointRegion.IsOpening">
            <summary>Defines whether or not this is an opening</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PointRegion.Tags">
            <summary>Tags to be applied to this region</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.PointRegion" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.Equals(BuildSoft.UBSM.Physical.PointRegion)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.HasEqualContent(BuildSoft.UBSM.Physical.PointRegion)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PointRegion.HasEqualCriticalContent(BuildSoft.UBSM.Physical.PointRegion)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.LineRegion">
            <summary>Define a line thickness region</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.LineRegion.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.LineRegion.MaterialID">
            <summary>Material ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.LineRegion.IsOpening">
            <summary>Defines whether or not this is an opening</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.LineRegion.Curve">
            <summary>Bezier curve describing the line region</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.LineRegion.Thickness">
            <summary>Line's thickness [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.LineRegion.Tags">
            <summary>Tags to be applied to this region</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.LineRegion" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.Equals(BuildSoft.UBSM.Physical.LineRegion)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.HasEqualContent(BuildSoft.UBSM.Physical.LineRegion)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.LineRegion.HasEqualCriticalContent(BuildSoft.UBSM.Physical.LineRegion)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.SurfaceRegion">
            <summary>Define a 2 dimensional cross-section area</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SurfaceRegion.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SurfaceRegion.MaterialID">
            <summary>Material ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SurfaceRegion.Contour">
            <summary>List of contour points defining the region [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SurfaceRegion.Triangles">
            <summary>List of triangles defining the region</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SurfaceRegion.IsOpening">
            <summary>Defines whether or not this is an opening</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SurfaceRegion.Tags">
            <summary>Tags to be applied to this region</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.SurfaceRegion" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.Equals(BuildSoft.UBSM.Physical.SurfaceRegion)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.HasEqualContent(BuildSoft.UBSM.Physical.SurfaceRegion)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SurfaceRegion.HasEqualCriticalContent(BuildSoft.UBSM.Physical.SurfaceRegion)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.CustomSectionPart">
            <summary> Defines a part that builds a (<see cref="T:BuildSoft.UBSM.Physical.CustomSection" />) which is a section in its own right </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.SectionID">
            <summary> The identifier of the section (<see cref="T:BuildSoft.UBSM.Physical.ParametricSection" /> or <see cref="T:BuildSoft.UBSM.Physical.CustomSection" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.Version">
            <summary>Version of the considered section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.ReferencePoint">
            <summary>Reference point for the positioning of this custom section part (origin of parametric sections is supposed to be the gravity center) [m]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.Angle">
            <summary>Angle to rotate the section around the reference point (positive counterclockwise) [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.IsOpening">
            <summary>Defines whether or not this is an opening in an underlying base part</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.MirroredZ">
            <summary>Section is mirrored with respect to Y = 0</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.MaterialOverrides">
            <summary>Defines a list of materials to replace in the section definition</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSectionPart.Tags">
            <summary>Tags to be applied to this region</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.CustomSectionPart" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.Equals(BuildSoft.UBSM.Physical.CustomSectionPart)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.HasEqualContent(BuildSoft.UBSM.Physical.CustomSectionPart)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSectionPart.HasEqualCriticalContent(BuildSoft.UBSM.Physical.CustomSectionPart)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.CustomSection">
            <summary>Defines a custom cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.Name">
            <summary>Localizable name of the custom cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.ProductionMethod">
            <summary>Describes the production method</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.Points">
            <summary> List of point regions (<see cref="T:BuildSoft.UBSM.Physical.PointRegion" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.Lines">
            <summary> List of line regions (<see cref="T:BuildSoft.UBSM.Physical.LineRegion" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.Surfaces">
            <summary> List of surface regions (<see cref="T:BuildSoft.UBSM.Physical.SurfaceRegion" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.Sections">
            <summary> List of section parts (<see cref="T:BuildSoft.UBSM.Physical.CustomSectionPart" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.LastChanged">
            <summary>Date at which the cross-section was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.Status">
            <summary>Indicates the status of the cross-section in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CustomSection.ReadOnly">
            <summary>Indicates if the section is read only because it is a default section and not a user-defined section</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.CustomSection" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.Equals(BuildSoft.UBSM.Physical.CustomSection)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.HasEqualContent(BuildSoft.UBSM.Physical.CustomSection)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.HasEqualCriticalContent(BuildSoft.UBSM.Physical.CustomSection)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.DatabaseHashCode(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>
            The hash code as defined in a database (of the SingleSection/SectionProperties pair)
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.DatabaseContentHashCode(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>
            The hash code as defined in a database (of the SingleSection/SectionProperties pair)
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CustomSection.DatabaseCriticalContentHashCode(BuildSoft.UBSM.Analysis.SectionProperties)">
            <summary>
            The hash code as defined in a database (of the SingleSection/SectionProperties pair)
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.CorrespondingPoint">
            <summary>Defines the corresponding points between the begin and the end section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CorrespondingPoint.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CorrespondingPoint.IsReversed">
            <summary>Start point is in the end section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CorrespondingPoint.BeginPoint">
            <summary>The begin point's location</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.CorrespondingPoint.EndPoints">
            <summary>The end point locations for the begin point's location</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.CorrespondingPoint" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.Equals(BuildSoft.UBSM.Physical.CorrespondingPoint)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.HasEqualContent(BuildSoft.UBSM.Physical.CorrespondingPoint)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.CorrespondingPoint.HasEqualCriticalContent(BuildSoft.UBSM.Physical.CorrespondingPoint)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.SectionConnection">
            <summary>Defines the connection between the begin and end cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SectionConnection.ID">
            <summary>Section connection ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SectionConnection.IsPredefined">
            <summary>Defines whether a predefined connection should be used, e.g. I -&gt; I section, corresponding points ignored</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.SectionConnection.CustomDefinition">
            <summary>Correspondence in geometry of begin-end section</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.SectionConnection" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.Equals(BuildSoft.UBSM.Physical.SectionConnection)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.HasEqualContent(BuildSoft.UBSM.Physical.SectionConnection)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.SectionConnection.HasEqualCriticalContent(BuildSoft.UBSM.Physical.SectionConnection)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.VariableSection">
            <summary>Defines a variable cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.Name">
            <summary>Localizable name of the variable cross-section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.BeginSectionID">
            <summary>ID of the section at the begin</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.BeginSectionVersion">
            <summary>Current version of the parametric section or custom section at the begin</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.EndSectionID">
            <summary>ID of the section at the end</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.EndSectionVersion">
            <summary>Current version of the parametric section or custom section at the end</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.Connection">
            <summary>Describes connection between begin and end section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.Rotation">
            <summary>Rotation angle between begin and end section (positive counterclockwise and x-axis pointing to the viewew) [rad]</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.LastChanged">
            <summary>Date at which the cross-section was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.Status">
            <summary>Indicates the status of the cross-section in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.VariableSection.ReadOnly">
            <summary>Indicates if the section is read only because it is a default section and not a user-defined section</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.VariableSection" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.Equals(BuildSoft.UBSM.Physical.VariableSection)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.HasEqualContent(BuildSoft.UBSM.Physical.VariableSection)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.HasEqualCriticalContent(BuildSoft.UBSM.Physical.VariableSection)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.DatabaseHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.DatabaseContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.VariableSection.DatabaseCriticalContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Physical.PlateSection">
            <summary>Definition of a plate section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.ID">
            <summary>Database ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.Name">
            <summary>Localizable name of the plate section</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.SectionXID">
            <summary>Section ID of the cross-section according to the plate's X-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.SectionZID">
            <summary>Section ID of the cross-section according to the plate's Z-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.SectionZAnchorPlane">
            <summary>The anchor plane for the section in the plate's Z-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.OffsetSectionZInYLocalDir">
            <summary>It is a signed offset of the section in the Z-local direction measured in the Y-local direction</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.Version">
            <summary>Current version</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.LastChanged">
            <summary>Date at which the plate section was last changed in the database (UTC)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.Status">
            <summary>Indicates the status of the plate section in the database</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Physical.PlateSection.ReadOnly">
            <summary>Indicates if the section is read only because it is a default section and not a user-defined section</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Physical.PlateSection" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.Equals(BuildSoft.UBSM.Physical.PlateSection)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.HasEqualContent(BuildSoft.UBSM.Physical.PlateSection)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.HasEqualCriticalContent(BuildSoft.UBSM.Physical.PlateSection)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.DatabaseHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.DatabaseContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.Physical.PlateSection.DatabaseCriticalContentHashCode">
            <summary>
            The hash code as defined in a database
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.Visualisation.NamespaceDoc">
            <summary>Exchange library that handles the visual representation of the model's elements</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Visualisation.Visibility">
            <summary>Describes the render state of an element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Visibility.Solid">
            <summary>Render as 3D solids</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Visibility.Wireframe">
            <summary>Render as wireframe</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Visibility.Hidden">
            <summary>Do not render at all</summary>
        </member>
        <member name="T:BuildSoft.UBSM.Visualisation.Color">
            <summary> Contains information about a color in the R (Red) - G (Green) - B (Blue) - A (Alpha) format. Values should be in the range [0..255] </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Color.R">
            <summary>Red component</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Color.G">
            <summary>Green component</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Color.B">
            <summary>Blue component</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Color.Alpha">
            <summary>Opacity (0 is transparent)</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Color.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Visualisation.Color" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Color.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Color.Equals(BuildSoft.UBSM.Visualisation.Color)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Color.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Color.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Color.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Visualisation.Layer">
            <summary>Describes a layer (group) an element can belong to</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Layer.ID">
            <summary>Layer ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Layer.Locked">
            <summary>The layer is locked (GUI cannot allow adjusting properties for a locked layer)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Layer.Hidden">
            <summary>If true, all elements on the layer should be hidden, regardless of their render state</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Layer.DefaultSelectedColor">
            <summary>Default color of elements on this layer when they are in the selected state</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Layer.DefaultColor">
            <summary>Default color of elements on this layer when they are in the unselected state</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.Layer.Name">
            <summary>Localizable name of the layer</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Layer.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Visualisation.Layer" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Layer.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Layer.Equals(BuildSoft.UBSM.Visualisation.Layer)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Layer.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Layer.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.Layer.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Visualisation.ElementInformation">
            <summary>Display information for a geometric element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.ElementInformation.ReferenceID">
            <summary>Element ID</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.ElementInformation.SelectedColor">
            <summary>Color to display when the element is selected (overrides layer settings)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.ElementInformation.Color">
            <summary>Color to display when the element is unselected (overrides layer settings)</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.ElementInformation.Visibility">
            <summary>Indicates the render state of the associated element</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.ElementInformation.LayerID">
            <summary>Layer ID this geometric element belongs to</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.ElementInformation.ExtensionData">
            <summary>A list of extra options that can be attached to an element concerning the displaying of that element</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.ElementInformation.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Visualisation.ElementInformation" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.ElementInformation.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.ElementInformation.Equals(BuildSoft.UBSM.Visualisation.ElementInformation)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.ElementInformation.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.ElementInformation.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.ElementInformation.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Visualisation.PhysicalVisualisation">
            <summary>Handles the visualisation options of a physical model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.Bars">
            <summary> Display options for physical bars (<see cref="T:BuildSoft.UBSM.Physical.Geometry.Bar" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.PolyBars">
            <summary> Display options for physical polybars (<see cref="T:BuildSoft.UBSM.Physical.Geometry.PolyBar" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.Plates">
            <summary> Display options for physical plates (<see cref="T:BuildSoft.UBSM.Physical.Geometry.Plate" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.Footings">
            <summary> Display options for physical pad footings (<see cref="T:BuildSoft.UBSM.Physical.Geometry.PadFooting" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Visualisation.PhysicalVisualisation" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.Equals(BuildSoft.UBSM.Visualisation.PhysicalVisualisation)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.HasEqualContent(BuildSoft.UBSM.Visualisation.PhysicalVisualisation)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.PhysicalVisualisation.HasEqualCriticalContent(BuildSoft.UBSM.Visualisation.PhysicalVisualisation)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Visualisation.AnalysisVisualisation">
            <summary>Handles the visualisation options of an analysis model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.ModelID">
            <summary>ID of the analysis model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.Points">
            <summary> Display options for analysis points (<see cref="T:BuildSoft.UBSM.Analysis.Geometry.Point" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.Bars">
            <summary> Display options for analysis bars (<see cref="T:BuildSoft.UBSM.Analysis.Geometry.Bar" />) </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.Plates">
            <summary> Display options for analysis plates (<see cref="T:BuildSoft.UBSM.Analysis.Geometry.Plate" />) </summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Visualisation.AnalysisVisualisation" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.Equals(BuildSoft.UBSM.Visualisation.AnalysisVisualisation)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.HasEqualContent(BuildSoft.UBSM.Visualisation.AnalysisVisualisation)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.AnalysisVisualisation.HasEqualCriticalContent(BuildSoft.UBSM.Visualisation.AnalysisVisualisation)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.Visualisation.DisplayOptions">
            <summary>Possible display options for the entire model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.DisplayOptions.Layers">
            <summary>List of layers in the model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.DisplayOptions.PhysicalModelInformation">
            <summary>Contains the visualisation options of the physical model</summary>
        </member>
        <member name="F:BuildSoft.UBSM.Visualisation.DisplayOptions.AnalysisModelInformation">
            <summary>Contains the visualisation options of all the analysis models</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.#ctor">
            <summary>Create a new instance of the <see cref="T:BuildSoft.UBSM.Visualisation.DisplayOptions" /> class</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.Clone">
            <summary>Create a deep copy</summary>
            <returns>Cloned instance</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.Equals(BuildSoft.UBSM.Visualisation.DisplayOptions)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.Equals(System.Object)">
            <summary>Check if both items are equal</summary>
            <param name="other">Item to compare with</param>
            <returns>True if values are identical</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.GetStaticHashCode">
            <summary>Get the HashCode</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.GetHashCode">
            <summary>GetHashCode override</summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.GetContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.GetCriticalContentHashCode">
            <summary>Get the content hash code</summary>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.HasEqualContent(System.Object)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.HasEqualCriticalContent(System.Object)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.HasEqualContent(BuildSoft.UBSM.Visualisation.DisplayOptions)">
            <summary>Check if the content is equal (basically ignore ID fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the contents are equal</returns>
        </member>
        <member name="M:BuildSoft.UBSM.Visualisation.DisplayOptions.HasEqualCriticalContent(BuildSoft.UBSM.Visualisation.DisplayOptions)">
            <summary>Check if the critical content is equal (basically ignore ID and Name database fields in the comparison)</summary>
            <param name="other">Item to compare with</param>
            <returns>True if the critical contents are equal</returns>
        </member>
        <member name="T:BuildSoft.UBSM.IEquatableContent">
            <summary>
            Interface that allows a content based comparison. This will ignore all
            database related fields.
            </summary>
        </member>
        <member name="M:BuildSoft.UBSM.IEquatableContent.HasEqualContent(System.Object)">
            <summary>
            Check for equal content
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.IEquatableContent.HasEqualCriticalContent(System.Object)">
            <summary>
            Check for equal critical content (ignore aliased strings)
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.IEquatableContent.GetContentHashCode">
            <summary>
            Hash code of the content
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.IEquatableContent.GetCriticalContentHashCode">
            <summary>
            Hash code of the critical content (ignoring aliased strings)
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.IEquatableContent`1">
            <summary>
            Interface that allows a content based comparison of a given type. This will ignore all
            database related fields.
            </summary>
            <typeparam name="T">The type of elements to compare</typeparam>
        </member>
        <member name="M:BuildSoft.UBSM.IEquatableContent`1.HasEqualContent(`0)">
            <summary>
            Check for equal content
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.IEquatableContent`1.HasEqualCriticalContent(`0)">
            <summary>
            Check for equal critical content (ignore aliased strings)
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.IHasheable">
            <summary>
            Interface that allows to create a static hash code
            </summary>
        </member>
        <member name="M:BuildSoft.UBSM.IHasheable.GetStaticHashCode">
            <summary>
            Static hash code independent of computer architecture, .NET version, etc...
            </summary>
            <returns></returns>
        </member>
        <member name="T:BuildSoft.UBSM.SaltedString">
            <summary>
            Todo: refactor, this doesn't belong here
            </summary>
        </member>
        <member name="M:BuildSoft.UBSM.SaltedString.GetNewSalt">
            <summary>
            Create a new salt
            </summary>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.SaltedString.GetHash(System.String)">
            <summary>
            Get a hash from a string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.SaltedString.GetHash(System.String,System.Byte[])">
            <summary>
            Get a hash from string and salt
            </summary>
            <param name="value"></param>
            <param name="salt"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.SaltedString.ConvertByteArrayToString(System.Byte[])">
            <summary>
            Convert a byte array to a string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.SaltedString.ConvertStringToByteArray(System.String)">
            <summary>
            Convert a string to a byte array
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BuildSoft.UBSM.SaltedString.ReadHash(System.Byte[],System.Byte[]@,System.Byte[]@)">
            <summary>
            Read a hash
            </summary>
            <param name="value"></param>
            <param name="hash"></param>
            <param name="salt"></param>
        </member>
        <member name="M:BuildSoft.UBSM.SaltedString.ReadHash(System.String,System.Byte[]@,System.Byte[]@)">
            <summary>
            Read a hash
            </summary>
            <param name="value"></param>
            <param name="hash"></param>
            <param name="salt"></param>
        </member>
        <member name="T:BuildSoft.UBSM.Hashfunction">
            <summary>
            List of hash functions to use
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Hashfunction.DEFAULT">
            <summary>
            Default hash
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Hashfunction.CRC32">
            <summary>
            CRC32 hash
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Hashfunction.MD5">
            <summary>
            MD5 hash
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Hashfunction.SERIALIZATION">
            <summary>
            Serialized hash
            </summary>
        </member>
        <member name="F:BuildSoft.UBSM.Hashfunction.SHA1">
            <summary>
            SHA1
            </summary>
        </member>
        <member name="T:BuildSoft.UBSM.ExternalTools">
            <summary>
            todo: should this be public?
            </summary>
        </member>
        <member name="M:BuildSoft.UBSM.ExternalTools.GetStaticHashCode(System.Object,BuildSoft.UBSM.Hashfunction)">
            <summary>
            Determine the static hash code using a specific hash function.
            </summary>
            <param name="value"></param>
            <param name="hasher"></param>
            <returns></returns>
        </member>
    </members>
</doc>
